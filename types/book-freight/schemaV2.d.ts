/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/v2.0/auth/token": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Generate token
         * @description This endpoint can be used to generate a bearer token for use as the authentication for all other v2.0 endpoints.
         */
        post: operations["authGetToken"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v2.0/shipments": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Search shipments
         * @description This endpoint can be used to retrieve shipments from Freightview, via a `search` query parameter and/or various filters available as query parameters (e.g. `status`).
         *
         *     **Query Parameters**
         *
         *     All query parameters that are arrays are serialized in form style (i.e. the query parameter is repeated for each value in the array).
         *
         *     For example, a search for shipments that are in `confirmed` or `delivered` `status`, should be sent like this: `https://{baseUrl}/shipments?status=confirmed&status=delivered`.
         *
         */
        get: operations["shipmentsSearchShipments"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v2.0/shipments/{shipmentId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get shipment details
         * @description This endpoint provides detailed information for a given `shipmentId`.
         */
        get: operations["shipmentsGetShipmentById"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v2.0/shipments/{shipmentId}/quotes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get shipment quotes
         * @description This endpoint provides all quotes available for a given `shipmentId`.
         */
        get: operations["shipmentsGetQuotes"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v2.0/shipments/{shipmentId}/tracking": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get shipment tracking history
         * @description This endpoint provides detailed tracking history for a given `shipmentId`.
         */
        get: operations["shipmentsGetTrackHistory"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v2.0/shipments/truckload/{shipmentId}/quote": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Add manual quote
         * @description This endpoint can be used to add a quote to a truckload shipment.
         *
         *     If the value provided for `carrierEmail` does not match any carrier email address associated with the Freightview account, and no `autoCreateCarrierName` value is provided with which to create a new carrier in Freightview for the carrier email address, an `HTTP 404 Not Found` error will be returned.
         *
         */
        post: operations["truckloadAddQuote"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v2.0/shipments/truckload": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Create shipment
         * @description This endpoint can be used to create a truckload shipment.
         *
         *     - A successfully created shipment returns a `shipmentId` with a `status` of `pending`, and echoes the shipment data passed in.
         *     - It also includes any additional default data from Freightview (e.g. a location's latitude, longitude, & timezone, and the default account bill-to information if none was specified in the create request).
         *
         */
        post: operations["truckloadCreateShipment"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v2.0/shipments/truckload/{shipmentId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        /**
         * Edit shipment
         * @description This endpoint can be used to edit a truckload shipment.
         *
         *     - The required fields in each object differ based on whether a shipment has been awarded or not.
         *     - A successfully edited shipment echoes the shipment data passed in, as well as any additional default data from Freightview.
         *
         */
        put: operations["truckloadEditShipment"];
        post?: never;
        /**
         * Cancel shipment
         * @description This endpoint can be used to cancel a truckload shipment.
         */
        delete: operations["truckloadCancelShipment"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v2.0/shipments/truckload/{shipmentId}/award": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Award shipment to carrier
         * @description This endpoint can be used to award a truckload shipment to a carrier.
         *
         *     - Add full address detail for each location.
         *     - Add contact information for each location.
         *     - Add location appointment times (if needed).
         *     - If creating a bill of lading, include all handling unit information in the `items` array.
         *
         */
        post: operations["truckloadAwardShipment"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v2.0/shipments/truckload/{shipmentId}/confirm": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Manually confirm shipment
         * @description This endpoint can be used to manually confirm a truckload shipment.
         *
         *     - Only shipments in `awarded` status can be manually confirmed.
         *     - Manual confirmation should only be done if the carrier has provided confirmation of the shipment separately to the shipper (and not through Freightview, which is the recommended workflow).
         *
         */
        post: operations["truckloadConfirmShipment"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v2.0/shipments/truckload/{shipmentId}/retract": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Retract awarded shipment
         * @description This endpoint can be used to retract an awarded truckload shipment from a carrier. Only shipments that are in status `awarded` or `confirmed` can be retracted.
         *
         */
        post: operations["truckloadRetractAwardedShipment"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v2.0/shipments/truckload/quotes/{shipmentId}/request": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Request quotes for shipment
         * @description This endpoint can be used to request spot quotes from carriers for a truckload shipment.
         */
        post: operations["truckloadRequestForQuotes"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        UnauthorizedError: {
            /**
             * @description The name of the error.
             *
             *     - `TOKEN_EXPIRED` - The request authorization failed because the provided token has expired.
             *     - `UNAUTHORIZED` - The request authorization failed because the provided token was invalid.
             *
             * @default UNAUTHORIZED
             */
            name: string;
            /** @description The unique identifier for this request / response that should be referenced when requesting assistance from Freightview Support. */
            requestId: string;
            /** @description The error message. */
            message: string;
        };
        BadRequestError: {
            /**
             * @description The name of the error.
             * @default BAD_REQUEST
             */
            name: string;
            /** @description The unique identifier for this request / response that should be referenced when requesting assistance from Freightview Support. */
            requestId: string;
            /** @description The error message. */
            message: string;
        };
        ValidationError: {
            /** @description The name of the error.
             *
             *     - `VALIDATION_ERROR` - The input data was not valid, in either content or format (e.g. improperly formatted JSON). The `message` field will describe the error, and if applicable, the objects in the `errors` array will have details on which fields and values were invalid.
             *      */
            name: string;
            /** @description The unique identifier for this request / response that should be referenced when requesting assistance from Freightview Support. */
            requestId: string;
            /** @description The error message. */
            message: string;
            /** @description The errors associated with the request. */
            errors?: components["schemas"]["ValidationErrorEntry"][];
        };
        ValidationErrorEntry: {
            /** @description The path to the property with invalid data. */
            propertyName: string;
            /** @description The error message regarding the property. */
            message: string;
            /** @description The allowed values for the property. */
            allowedValues?: string[];
            /** @description The value provided for the property. */
            providedValue?: number | string | boolean | Record<string, never> | unknown[];
        };
        TokenResponseDTO: {
            /** @description The access token that should be used as the bearer token on all subsequent API calls. */
            access_token?: string;
            /** @description The amount of time the token is valid. Will always be 86400 seconds (24 hours). */
            expires_in?: number;
            /** @description The access token scope. */
            scope?: string;
            /**
             * @description The type of token generated. Will always be **Bearer**.
             * @enum {string}
             */
            token_type?: "Bearer";
        };
        GenerateTokenReqDTO: {
            /** @description The client id to use when generating the access token. */
            client_id: string;
            /** @description The client secret to use when generating the access token. */
            client_secret: string;
            /**
             * @description The grant type to use when generating access token.
             * @enum {string}
             */
            grant_type: "client_credentials";
        };
        ExternalPagedShipmentsDTO: {
            /** @description An array of shipments that matched the query parameters. */
            shipments?: components["schemas"]["ExternalShipmentDTO"][];
            /** @description - If search results (in the `data` array) exceed 20 shipments, then a `continuationToken` value will be returned.
             *     - Pass the `continuationToken` as a query parameter to retrieve the next set of search results.
             *     - If `continuationToken` is not present, then no further results are available.
             *      */
            continuationToken?: string;
        };
        ExternalShipmentDTO: {
            /**
             * Format: date-time
             * @description Date / time when shipment was awarded to carrier.
             */
            bookedDate?: string;
            /**
             * Format: date-time
             * @description Date / time when shipment was created.
             */
            createdDate?: string;
            /** @description The unique identifier in Freightview for this shipment. */
            shipmentId?: string;
            /**
             * Format: date
             * @description The requested date for pickup of the shipment.
             */
            pickupDate?: string;
            /**
             * @description - `pending` - Shipment has been created.
             *     - `awarded` - Shipment has been awarded to a carrier.
             *     - `confirmed` - Shipment has been confirmed by carrier.
             *     - `picked-up` - Shipment has been picked up.
             *     - `delivered` - Shipment has been delivered.
             *     - `canceled` - Shipment has been canceled by the shipper.
             *
             * @enum {string}
             */
            status?: "pending" | "awarded" | "confirmed" | "picked-up" | "delivered" | "canceled";
            /** @description The shipment's locations, e.g. origin, destination and any stops in between. */
            locations?: components["schemas"]["ExternalLocationDTO"][];
            billTo?: components["schemas"]["ApiBillToDTO"];
            equipment?: components["schemas"]["ExternalEquipmentDTO"];
            customsBroker?: components["schemas"]["ApiCustomsBrokerDTO"];
            emergencyContact?: components["schemas"]["ApiEmergencyContactDTO"];
            /** @description A flag to indicate whether the shipper considers the shipment a "live load".
             *
             *     - `true` - This is a "live load" that will be shipped.
             *     - `false` - This shipment is "quote only".
             *      */
            isLiveLoad?: boolean;
            /** @description A flag to indicate whether the shipment has been archived in Freightview. */
            isArchived?: boolean;
            /** @description The items (handling units) being transported as part of the shipment. */
            items?: components["schemas"]["ExternalHandlingUnitDTO"][];
            /**
             * @description The direction of the the shipment (based on the locations setup for the account).
             * @enum {string}
             */
            direction?: "inbound" | "outbound" | "third-party";
            /** @description The reference numbers associated with the shipment. */
            refNums?: components["schemas"]["ReadOnlyRefNum"][];
            selectedQuote?: components["schemas"]["ExternalQuoteDTO"];
            tracking?: components["schemas"]["LoadTrackDetailDTO"];
            /** @description The documents for the shipment. */
            documents?: components["schemas"]["ExternalDocumentDTO"][];
            pickup?: components["schemas"]["ExternalPickupDetailsDTO"];
            bol?: components["schemas"]["ExternalBOLDetailsDTO"];
            invoice?: components["schemas"]["ExternalInvoiceDTO"];
            /** @description The name of the user who quoted the shipment. */
            quotedBy?: string;
            /** @description The name of the user who booked the shipment. */
            bookedBy?: string;
            /** @description A direct link to access the details for this shipment within Freightview. */
            shipmentDetailsUrl?: string;
            /** @description A direct link to access all of the quotes for this shipment within Freightview. */
            shipmentQuotePageUrl?: string;
        };
        ExternalLocationDTO: {
            /** @description Company name for the location. */
            company?: string;
            /** @description Address for the location. */
            address?: string;
            /** @description Address line 2 for the location. */
            address2?: string;
            /** @description City for the location. */
            city?: string;
            /** @description Two character state / province abbreviation for the location. */
            state?: string;
            /**
             * @description Postal code of the location in US or Canadian format.
             *
             *     Valid formats (USA):
             *       - `10111`
             *       - `10111-1111`
             *
             *     Valid formats (Canada):
             *       - `A9A9A9`
             *       - `A9A 9A9`
             *       - `A9A-9A9`
             *
             * @example 10111
             */
            postalCode: string;
            /**
             * @description Two character country code for the location.
             * @example us
             * @enum {string}
             */
            country?: "us" | "ca";
            /**
             * Format: date
             * @description The date of the stop at the location.
             * @example 2021-03-01
             */
            stopDate?: string;
            /**
             * @description An indicator of whether the stop should be made on the stop date, or by the stop date.
             * @enum {string}
             */
            stopDateType?: "on" | "by";
            /**
             * @description An indicator of whether freight will be picked up, delivered, or both at this stop.
             * @enum {string}
             */
            stopType?: "pickup" | "delivery" | "both";
            /** @description The sequence of the location within the shipment, starting at 0. */
            sequence: number;
            /** @description The accessorials associated with the location. */
            accessorials?: components["schemas"]["LocationAccessorialDTO"][];
            /** @description Reference numbers for the location. */
            refNums?: components["schemas"]["LocationRefNum"][];
            /**
             * @description An indicator of whether the location is the origin / destination of the shipment, or a stop in between.
             * @enum {string}
             */
            type: "origin" | "destination" | "stop";
            /** @description The latitude of the location. */
            lat?: number;
            /** @description The longitude of the location. */
            lng?: number;
            /** @description The timezone of the location in [IANA timezone](https://www.iana.org/time-zones) format. e.g. `America/New_York` */
            timezone?: string;
            /**
             * @description The time the location will open in 24-hr format.
             * @example 15:30
             */
            opensAt?: string;
            /**
             * @description The time the location will close in 24-hr format.
             * @example 15:30
             */
            closesAt?: string;
            /** @description The name of a contact person at the location. */
            contactName?: string;
            /** @description The email address for the contact at the location. */
            contactEmail?: string;
            /** @description The phone number for the contact at the location. */
            contactPhone?: string;
            /** @description The phone number extension for the contact at the location. */
            contactPhoneExt?: string;
            /** @description The special instructions for the location. */
            instructions?: string;
        };
        LocationAccessorialDTO: {
            /**
             * @description An accessorial associated with the location. Can be the type of location (e.g. `residential` and/or an activity to be performed at the location (e.g. `schedule`, `sort-and-segregate`).
             * @enum {string}
             */
            key?: "schedule" | "driver-assist" | "notify" | "limited-access" | "inside" | "tradeshow" | "residential" | "sort-and-segregate" | "construction-site" | "farm" | "military" | "airport" | "place-of-worship" | "school" | "mine" | "pier" | "liftgate";
            /**
             * @description The start time of the appointment in 24-hr time. (Only for accessorial key of `schedule`).
             * @example 15:30
             */
            opensAt?: string;
            /**
             * @description The end time of the appointment in 24-hr time. (Only for accessorial key of `schedule`).
             * @example 15:30
             */
            closesAt?: string;
        };
        LocationRefNum: {
            /**
             * @description The type of reference number.
             * @enum {string}
             */
            type: "other";
            /** @description The value of the reference number. */
            value: string;
        };
        /** @description The bill-to information for the shipment. */
        ApiBillToDTO: {
            /** @description The company name for the billing party. */
            company: string;
            /** @description The address for the billing party. */
            address: string;
            /** @description The address line 2 for the billing party. */
            address2?: string;
            /** @description The city for the billing party. */
            city: string;
            /** @description The two character state / province abbreviation for the billing party. */
            state: string;
            /**
             * @description Postal code of for the billing party in US or Canadian format.
             *
             *     Valid formats (USA):
             *       - `10111`
             *       - `10111-1111`
             *
             *     Valid formats (Canada):
             *       - `A9A9A9`
             *       - `A9A 9A9`
             *       - `A9A-9A9`
             *
             * @example 10111
             */
            postalCode: string;
            /**
             * @description The two character country code for the billing party.
             * @example us
             * @enum {string}
             */
            country?: "us" | "ca";
            /** @description The contact name for the billing party. */
            contactName: string;
            /**
             * @description The phone number for the billing party.
             * @example (555) 555-5555
             */
            contactPhone?: string;
            /** @description The phone number extension for the billing party. */
            contactPhoneExt?: string;
            /**
             * Format: email
             * @description The email address for the billing party.
             */
            contactEmail: string;
        };
        /** @description The equipment for the shipment. */
        ExternalEquipmentDTO: {
            /** @description The alternate types of equipment that could be quoted by the carrier. */
            alternateTypes?: ("dry-van-53" | "dry-van-48" | "flatbed-53" | "flatbed-48" | "refrigerated-48" | "refrigerated-53" | "step-deck" | "flatbed-lowboy" | "air-freight" | "box-truck-16" | "box-truck-24" | "bulk-aluminum" | "bulk-auger-semi" | "bulk-auger-straight-truck" | "bulk-belt-trailer" | "bulk-convertible-hopper" | "bulk-end-dump" | "bulk-hopper" | "bulk-insulated" | "bulk-lined" | "bulk-one-tank" | "bulk-pneumatic" | "bulk-stainless" | "bulk-three-hole" | "bulk-four-hole" | "bulk-two-hole" | "bulk-walking-floor" | "bulk-bag-combo" | "conestoga" | "consolidated" | "crazy8-flatbed" | "curtain-side-van" | "drayage-20" | "drayage-40" | "drayage-45" | "drayage-48" | "drayage-53" | "flatbed-48-double-drop" | "flatbed-48-step" | "flatbed-53-step" | "flatbed-b-train" | "flatbed-heavy-haul" | "flatbed-removable-gooseneck(rgn)" | "flatbed-self-unloader" | "flatbed-with-piggyback" | "flatbed-tri-axle" | "intermodal-20" | "intermodal-40" | "intermodal-45" | "intermodal-48" | "intermodal-53" | "logistics-van-53" | "ltl" | "padded-van" | "partial-dry-van" | "partial-flatbed" | "partial-refrigerated" | "power-only" | "pup" | "refrigerated-ltl" | "sprinter-van" | "straight-truck-20" | "straight-truck-26" | "tanker" | "volume-ltl")[];
            /**
             * @description The type of equipment used for the transport of the shipment.
             * @enum {string}
             */
            type: "dry-van-53" | "dry-van-48" | "flatbed-53" | "flatbed-48" | "refrigerated-48" | "refrigerated-53" | "step-deck" | "flatbed-lowboy" | "air-freight" | "box-truck-16" | "box-truck-24" | "bulk-aluminum" | "bulk-auger-semi" | "bulk-auger-straight-truck" | "bulk-belt-trailer" | "bulk-convertible-hopper" | "bulk-end-dump" | "bulk-hopper" | "bulk-insulated" | "bulk-lined" | "bulk-one-tank" | "bulk-pneumatic" | "bulk-stainless" | "bulk-three-hole" | "bulk-four-hole" | "bulk-two-hole" | "bulk-walking-floor" | "bulk-bag-combo" | "conestoga" | "consolidated" | "crazy8-flatbed" | "curtain-side-van" | "drayage-20" | "drayage-40" | "drayage-45" | "drayage-48" | "drayage-53" | "flatbed-48-double-drop" | "flatbed-48-step" | "flatbed-53-step" | "flatbed-b-train" | "flatbed-heavy-haul" | "flatbed-removable-gooseneck(rgn)" | "flatbed-self-unloader" | "flatbed-with-piggyback" | "flatbed-tri-axle" | "intermodal-20" | "intermodal-40" | "intermodal-45" | "intermodal-48" | "intermodal-53" | "logistics-van-53" | "ltl" | "padded-van" | "partial-dry-van" | "partial-flatbed" | "partial-refrigerated" | "power-only" | "pup" | "refrigerated-ltl" | "sprinter-van" | "straight-truck-20" | "straight-truck-26" | "tanker" | "volume-ltl";
            /** @description The accessorials associated with the equipment.
             *
             *     - `chains` - Only applicable for flatbed equipment.
             *     - `e-track` - Only applicable for dry van equipment.
             *     - `food-grade` - Only applicable for dry van and refrigerated equipment.
             *     - `load-bars` - Only applicable for dry van equipment.
             *     - `tarps` - Only applicable for flatbed equipment.
             *     - `temp` - Only applicable for refrigerated equipment.
             *     - `straps` - Only applicable for dry van and flatbed equipment.
             *     - `protect-from-freezing` Only applicable for LTL equipment.
             *     - `liftgate` - Only applicable for dry van, straight truck, and box truck equipment.
             *     - `team-driver` - Applicable for all equipment types.
             *     - `tanker-endorsement` - Only applicable for dry van, flatbed, and refrigerated equipment.
             *      */
            accessorials?: components["schemas"]["EquipmentAccessorialDTO"][];
            /** @description The description of the shipment. */
            description: string;
            /** @description The declared value of the shipment provided when quoting. */
            declaredValue?: number;
            /**
             * @description The declared value currency.
             * @default usd
             * @example usd
             * @enum {string}
             */
            declaredValueCurrency: "usd";
            /** @description The weight of the shipment. */
            weight: number;
            /**
             * @description The unit of measure for the weight.
             * @enum {string}
             */
            weightUOM: "lbs";
            /** @description A flag to indicate whether the shipment is hazardous. */
            isHazardous: boolean;
        };
        EquipmentAccessorialDTO: {
            /**
             * @description The identifier for the accessorial.
             * @enum {string}
             */
            key: "chains" | "e-track" | "food-grade" | "load-bars" | "tarps" | "temp" | "straps" | "protect-from-freezing" | "liftgate" | "team-driver" | "tanker-endorsement";
        };
        EquipmentAccessorialCount: {
            key: "chains";
        } & (Omit<components["schemas"]["EquipmentAccessorialDTO"], "key"> & {
            /** @description A count of how many of the accessorial are needed. */
            count: number;
        });
        EquipmentAccessorialTemp: {
            key: "temp";
        } & (Omit<components["schemas"]["EquipmentAccessorialDTO"], "key"> & {
            /** @description The minimum temperature for the equipment. */
            min: number;
            /** @description The maximum temperature for the equipment. */
            max: number;
            /**
             * @description The unit of measurement for the temperature.
             * @enum {string}
             */
            uom: "f" | "c";
        });
        EquipmentAccessorialTarps: {
            key: "tarps";
        } & (Omit<components["schemas"]["EquipmentAccessorialDTO"], "key"> & {
            /**
             * @description The size of tarps needed (in feet).
             * @enum {number}
             */
            size: 4 | 6 | 8;
        });
        EquipmentAccessorialSimple: {
            key: "e-track";
        } & Omit<components["schemas"]["EquipmentAccessorialDTO"], "key">;
        /** @description The customs broker for the shipment. */
        ApiCustomsBrokerDTO: {
            /** @description The address of the customs broker. */
            address?: string;
            /** @description The address line 2 of the customs broker. */
            address2?: string;
            /** @description The city of the customs broker. */
            city?: string;
            /** @description The company name of the customs broker. */
            companyName: string;
            /**
             * @description The two-digit country code for the customs broker.
             * @example us
             * @enum {string}
             */
            country?: "us" | "ca";
            /**
             * Format: email
             * @description The email address of the customs broker.
             */
            email?: string;
            /**
             * @description The phone number of the customs broker.
             * @example (555) 555-5555
             */
            phone: string;
            /** @description The phone number extension of the customs broker. */
            phoneExt?: string;
            /**
             * @description The postal code of the customs broker in US or Canadian format.
             *
             *     Valid formats (USA):
             *       - `10111`
             *       - `10111-1111`
             *
             *     Valid formats (Canada):
             *       - `A9A9A9`
             *       - `A9A 9A9`
             *       - `A9A-9A9`
             *
             * @example 10111
             */
            postalCode?: string;
            /** @description The two-digit state / province code for the customs broker. */
            state?: string;
            /** @description The declared value of the shipment for customs. */
            value?: number;
        };
        /** @description The emergency contact information for the shipment _Required for hazardous material shipments._ */
        ApiEmergencyContactDTO: {
            /** @description The emergency contact name. */
            name: string;
            /**
             * @description The emergency contact phone number.
             * @example (555) 555-5555
             */
            phone: string;
            /** @description The emergency contact phone number extension. */
            phoneExt?: string;
            /** @description The contract number with the emergency contact. */
            contractNumber?: string;
        };
        ExternalHandlingUnitDTO: {
            /** @description The identifier for the handling unit in Freightview. */
            itemId?: string;
            /** @description The customs value of the handling unit. */
            customsValue?: number;
            /**
             * @description The currency code for the customs value.
             * @example usd
             * @enum {string}
             */
            customsValueCurrency?: "usd";
            /** @description The declared value of the handling unit. */
            declaredValue?: number;
            /**
             * @description The currency code for the declared value.
             * @example usd
             * @enum {string}
             */
            declaredValueCurrency?: "usd";
            /**
             * @description The unit of measure for the handling unit dimensions (`length`, `width`, `height`).
             * @enum {string}
             */
            dimensionsUOM?: "in";
            /**
             * @description The freight class of the handling unit.
             * @enum {number}
             */
            freightClass?: 50 | 55 | 60 | 65 | 70 | 77.5 | 85 | 92.5 | 100 | 110 | 125 | 150 | 175 | 200 | 250 | 300 | 400 | 500;
            /** @description The height of the handling unit. */
            height?: number;
            /** @description The length of the handling unit. */
            length?: number;
            /** @description The NMFC code for the handling unit. */
            nmfcNumber?: number;
            /** @description The NMFC sub-code for the handling unit. */
            nmfcSubNumber?: number;
            /** @description The quantity of handling units in this `items` object. */
            quantity: number;
            /** @description The reference numbers associated with the handling unit. */
            refNums?: components["schemas"]["ItemRefNum"][];
            /** @description The width of the handling unit. */
            width?: number;
            /** @description The location `sequence` number where the handling unit will be picked up. */
            pickupLocationSequence: number;
            /** @description The location `sequence` number where the handling unit will be dropped off. */
            dropLocationSequence: number;
            /** @description A flag to indicate whether the handling unit can be stacked. */
            stackable?: boolean;
            /** @description A flag to indicate whether the handling unit can be turned (not in use). */
            turnable?: boolean;
            /** @description The weight of the handling unit. */
            weight: number;
            /**
             * @description The unit of measure for the weight.
             * @enum {string}
             */
            weightUOM: "lbs";
            /** @description A description of the handling unit contents. */
            description: string;
            /**
             * @description The type of handling unit.
             * @example pallet
             * @enum {string}
             */
            type: "bag" | "bale" | "barrel" | "basket" | "beam" | "bin" | "box" | "bucket" | "bulkhead" | "bulkfloor" | "bundle" | "can" | "carboy" | "carpet" | "carton" | "case" | "cask" | "chest" | "coil" | "container" | "crate" | "cylinder" | "drum" | "firkin" | "gallon" | "gaylord" | "hamper" | "hogshead" | "jar" | "jerrican" | "keg" | "kit" | "liter" | "loose" | "ounce" | "package" | "pail" | "pallet" | "piece" | "platform" | "rack" | "reel" | "roll" | "skid" | "slipsheet" | "spool" | "stack" | "tank" | "tote" | "trunk" | "tub" | "tube" | "unit";
            /** @description The contents of the handling unit. */
            contains?: components["schemas"]["ExternalItemDTO"][];
            /** @description The hazardous material details. */
            hazardous?: components["schemas"]["ExternalHazardousDetail"][];
        };
        ItemRefNum: {
            /** @enum {string} */
            type: "other";
            value: string;
        };
        ExternalItemDTO: {
            /** @description The customs value of the item. */
            customsValue?: number | null;
            /**
             * @description The currency code of the customs value.
             * @example usd
             * @enum {string}
             */
            customsValueCurrency?: "usd";
            /** @description The declared value of the item. */
            declaredValue?: number | null;
            /**
             * @description The currency code for the declared value.
             * @example usd
             * @enum {string}
             */
            declaredValueCurrency?: "usd";
            /** @description A description of the item contents. */
            description: string;
            /**
             * @description The unit of measure for the item dimensions (`length`, `width`, `height`).
             * @enum {string}
             */
            dimensionsUOM?: "in";
            /**
             * @description The freight class of the item contents.
             * @enum {number}
             */
            freightClass?: 50 | 55 | 60 | 65 | 70 | 77.5 | 85 | 92.5 | 100 | 110 | 125 | 150 | 175 | 200 | 250 | 300 | 400 | 500;
            /** @description The height of the item. */
            height?: number | null;
            /** @description The length of the item. */
            length?: number | null;
            /** @description The NMFC code for the item contents. */
            nmfcNumber?: number;
            /** @description The NMFC sub-code for the item contents. */
            nmfcSubNumber?: number;
            /** @description The quantity of item contents. */
            quantity?: number;
            /** @description The reference numbers associated with the item. */
            refNums?: components["schemas"]["ItemRefNum"][];
            /**
             * @description The type of packaging for the item contents.
             * @enum {string}
             */
            type: "bag" | "bale" | "barrel" | "basket" | "beam" | "bin" | "box" | "bucket" | "bulkhead" | "bulkfloor" | "bundle" | "can" | "carboy" | "carpet" | "carton" | "case" | "cask" | "chest" | "coil" | "container" | "crate" | "cylinder" | "drum" | "firkin" | "gallon" | "gaylord" | "hamper" | "hogshead" | "jar" | "jerrican" | "keg" | "kit" | "liter" | "loose" | "ounce" | "package" | "pail" | "pallet" | "piece" | "platform" | "rack" | "reel" | "roll" | "skid" | "slipsheet" | "spool" | "stack" | "tank" | "tote" | "trunk" | "tub" | "tube" | "unit";
            /** @description The weight of the item contents. */
            weight?: number;
            /**
             * @description The unit of measure for the weight of the item contents.
             * @enum {string}
             */
            weightUOM?: "lbs";
            /** @description The width of the item. */
            width?: number;
            /** @description The hazardous material details. */
            hazardous?: components["schemas"]["ExternalHazardousDetail"][];
        };
        /** @description The details of the hazardous material. */
        ExternalHazardousDetail: {
            /** @description The UN/NA number for the hazardous material. */
            hazmatId: string;
            /** @description The US DOT special permit number provided to a shipper as authorization to transport the hazardous material. */
            permitNumber?: string;
            /**
             * @description Primary hazard class of the hazardous material.
             * @enum {string}
             */
            primaryClass: "1.1A" | "1.1B" | "1.1C" | "1.1D" | "1.1E" | "1.1F" | "1.1G" | "1.1J" | "1.1L" | "1.2B" | "1.2C" | "1.2D" | "1.2E" | "1.2F" | "1.2G" | "1.2H" | "1.2J" | "1.2K" | "1.2L" | "1.3C" | "1.3F" | "1.3G" | "1.3H" | "1.3J" | "1.3K" | "1.3L" | "1.4B" | "1.4C" | "1.4D" | "1.4E" | "1.4F" | "1.4G" | "1.4S" | "1.5D" | "1.6N" | "2.1" | "2.2" | "2.3" | "3" | "4.1" | "4.2" | "4.3" | "5.1" | "5.2" | "6.1" | "6.2" | "7" | "8" | "9" | "9.2";
            /**
             * @description Secondary hazard class of the hazardous material.
             * @enum {string}
             */
            secondaryClass?: "" | "2.1" | "2.2" | "2.3" | "3" | "4.1" | "4.2" | "4.3" | "5.1" | "5.2" | "6.1" | "6.2" | "7" | "8" | "9" | "9.2";
            /**
             * @description Tertiary hazard class of the hazardous material.
             * @enum {string}
             */
            tertiaryClass?: "" | "2.1" | "2.2" | "2.3" | "3" | "4.1" | "4.2" | "4.3" | "5.1" | "5.2" | "6.1" | "6.2" | "7" | "8" | "9" | "9.2";
            /**
             * @description The packing group of the hazardous material.
             * @enum {string}
             */
            packingGroup?: "I" | "II" | "III";
        };
        RefNum: {
            /**
             * @description The type of reference number.
             * @enum {string}
             */
            type: "other";
            /** @description The value of the reference number. */
            value: string;
        };
        ReadOnlyRefNum: {
            /**
             * @description The type of reference number.
             * @enum {string}
             */
            type?: "load-num" | "other";
            /** @description The value of the reference number. */
            value?: string;
        };
        /** @description The details of the quote. */
        ExternalQuoteDTO: {
            /** @description The unique identifier for the quote in Freightview. */
            quoteId?: string;
            /** @description The unique identifier for the carrier in Freightview. */
            carrierId?: string;
            /** @description The date/time the quote was added to the shipment. */
            createdDate?: string;
            /** @description The name of the carrier transporting the shipment. */
            assetCarrierName?: string;
            /** @description The 4-digit SCAC code for the carrier transporting the shipment. */
            assetCarrierCode?: string;
            /** @description The name of the carrier providing the quote for the shipment.
             *
             *     If the quote is provided by a broker, then this is different than the `assetCarrierName`, which is the carrier actually providing transportation of the freight.
             *      */
            providerName?: string;
            /** @description The 4-digit SCAC code for the carrier providing the quote for the shipment. */
            providerCode?: string;
            /**
             * @description The type of equipment the carrier will use to transport the shipment.
             * @enum {string}
             */
            equipmentType?: "dry-van-53" | "dry-van-48" | "flatbed-53" | "flatbed-48" | "refrigerated-48" | "refrigerated-53" | "step-deck" | "flatbed-lowboy" | "air-freight" | "box-truck-16" | "box-truck-24" | "bulk-aluminum" | "bulk-auger-semi" | "bulk-auger-straight-truck" | "bulk-belt-trailer" | "bulk-convertible-hopper" | "bulk-end-dump" | "bulk-hopper" | "bulk-insulated" | "bulk-lined" | "bulk-one-tank" | "bulk-pneumatic" | "bulk-stainless" | "bulk-three-hole" | "bulk-four-hole" | "bulk-two-hole" | "bulk-walking-floor" | "bulk-bag-combo" | "conestoga" | "consolidated" | "crazy8-flatbed" | "curtain-side-van" | "drayage-20" | "drayage-40" | "drayage-45" | "drayage-48" | "drayage-53" | "flatbed-48-double-drop" | "flatbed-48-step" | "flatbed-53-step" | "flatbed-b-train" | "flatbed-heavy-haul" | "flatbed-removable-gooseneck(rgn)" | "flatbed-self-unloader" | "flatbed-with-piggyback" | "flatbed-tri-axle" | "intermodal-20" | "intermodal-40" | "intermodal-45" | "intermodal-48" | "intermodal-53" | "logistics-van-53" | "ltl" | "padded-van" | "partial-dry-van" | "partial-flatbed" | "partial-refrigerated" | "power-only" | "pup" | "refrigerated-ltl" | "sprinter-van" | "straight-truck-20" | "straight-truck-26" | "tanker" | "volume-ltl";
            /**
             * Format: date
             * @description The expiration date of the quote.
             * @example 2021-03-01
             */
            expirationDate?: string;
            /** @description The quote number specified by the carrier providing the quote. */
            quoteNum?: string;
            /** @description An identifier for the service. */
            serviceId?: string;
            /** @description A description of the service. */
            serviceDescription?: string;
            /**
             * @description The method of the pricing used for the quote.
             * @enum {string}
             */
            pricingMethod?: "contracted" | "capacity";
            /**
             * @description The type of pricing used for the quote.
             * @enum {string}
             */
            pricingType?: "pallet" | "dimensional" | "spot" | "tariff" | "density";
            /** @description A description of the pricing used to calculate the quote. */
            pricingDescription?: string;
            /** @description The total amount of this quote. Includes linehaul, fuel, and all additional charges. */
            amount?: number;
            /**
             * @description The currency of the quote amount.
             * @enum {string}
             */
            currency?: "usd";
            /** @description The reference numbers associated with the quote. */
            refNums?: components["schemas"]["QuoteRefNum"][];
            /**
             * @description The status of the quote within Freightview.
             *
             *     - `active` - The quote is active in Freightview.
             *     - `awarded` - The shipper has selected the quote and awarded the shipment to the carrier.
             *     - `retracted` - The carrier has retracted the quote.
             *     - `error` - There was an error retrieving the quote.
             *
             * @enum {string}
             */
            status?: "active" | "awarded" | "retracted" | "error";
            /**
             * @description The method by which the quote was added to the shipment.
             * @enum {string}
             */
            method?: "api" | "upload" | "email" | "manual";
            /**
             * @description The source of the quote.
             * @enum {string}
             */
            source?: "shipper" | "carrier";
            /** @description The breakdown of the various charges that make up the quote `amount`. _Not supported by all carriers._ */
            charges?: components["schemas"]["ExternalQuoteCharge"][];
            /** @description The minimum number of transit days for the transport of the shipment. */
            transitDaysMin?: number;
            /** @description The maximum number of transit days for the transport of the shipment. */
            transitDaysMax?: number;
            /** @description A flag that indicates whether another carrier will be used to provide a portion of the transportation of the shipment. */
            interline?: boolean;
            /**
             * @description The mode of transport used for the shipment.
             * @enum {string}
             */
            mode?: "truckload" | "parcel" | "ltl" | "intermodal" | "consolidated" | "air" | "ocean" | "bulk";
            /**
             * @description The payment terms used for the quote.
             * @enum {string}
             */
            paymentTerms?: "outbound-prepaid" | "outbound-collect" | "inbound-collect" | "third-party-prepaid" | "third-party-collect";
            /** @description The errors encountered when retrieving the quote. */
            errors?: components["schemas"]["ExternalQuoteError"][];
            /** @description A direct link to book the shipment with this rate within Freightview. */
            shipmentBookPageUrl?: string;
        };
        QuoteRefNum: {
            /**
             * @description The type of reference number.
             * @enum {string}
             */
            type?: "contract-num" | "other";
            /** @description The value of the reference number. */
            value?: string;
        };
        ExternalQuoteCharge: {
            /** @description The name of the charge. */
            name: string;
            /** @description The amount of the charge. */
            amount: number;
            type?: string;
            /** @description The carrier's code for the charge. (Not provided by all carriers). */
            code?: string;
            /**
             * @description The currency of the charge.
             * @enum {string}
             */
            currency: "usd";
        };
        ExternalQuoteError: {
            /** @description The type of error. */
            type?: string;
            /** @description The error message. */
            message?: string;
        };
        TrackDetail: {
            /**
             * Format: date-time
             * @description The actual delivery date of the shipment.
             */
            deliveryDateActual?: string;
            /**
             * Format: date
             * @description The estimated delivery date of the shipment.
             * @example 2021-03-01
             */
            deliveryDateEstimate?: string;
            /**
             * Format: date-time
             * @description The date the tracking detail was last updated.
             */
            lastUpdatedDate?: string;
            /**
             * Format: date-time
             * @description The actual pickup date of the shipment.
             */
            pickupDateActual?: string;
            /**
             * @description The tracking status of the shipment.
             * @enum {string}
             */
            status?: "pending" | "in-transit" | "delivered" | "not-found" | "error";
            /** @description The tracking number for the shipment. */
            trackingNumber?: string;
        };
        ItemTrackDetail: components["schemas"]["TrackDetail"] & {
            /** @description The identifier of the item in Freightview to which this tracking detail belongs. */
            itemId?: string;
            /** @description The zero-based index of the individual item for the given group of items specified by the itemId. */
            index?: number;
        };
        LoadTrackDetailDTO: components["schemas"]["TrackDetail"] & {
            /** @description If the carrier provides item-level tracking, this will contain the tracking details for the individual items of this shipment. */
            items?: components["schemas"]["ItemTrackDetail"][];
        };
        ExternalDocumentDTO: {
            /** @description The name of the file. */
            fileName?: string;
            /**
             * @description The MIME type of the file.
             * @enum {string}
             */
            mimeType?: "application/pdf" | "application/zpl" | "image/jpeg" | "image/png";
            /**
             * @description The source of the document.
             * @enum {string}
             */
            source?: "carrier" | "shipper" | "system";
            /**
             * @description The type of the file.
             * @enum {string}
             */
            type?: "appointment-confirmation" | "authorization-for-special-service" | "bol" | "commercial-invoice" | "contact-time-critical" | "corrected-bol" | "customer-quote" | "customs-document" | "delivery-return-receipt" | "dimension-certificate" | "freight-forwarding-delivery-order" | "inspection-certificate" | "inspection-report" | "invoice" | "label" | "label-combined" | "letter-of-authority" | "lumper-certificate" | "mtr" | "nmfc-certificate" | "other" | "packing-slip" | "proof-of-delivery" | "quote" | "rate-confirmation" | "rate-detail" | "reconsignment-authorization" | "refused-delivery-receipt" | "signed-bol" | "tally-record-signature" | "weight-and-research-inspection" | "weight-cert" | "weights-and-corrections" | "weights-and-research-photos";
            /**
             * Format: date-time
             * @description The date the document was added to the shipment.
             */
            uploadDate?: string;
            /** @description The link to the document. */
            url?: string;
        };
        /** @description The details for the pickup of the shipment. */
        ExternalPickupDetailsDTO: {
            /**
             * @description The status of the pickup request.
             * @enum {string}
             */
            status?: "ok" | "pending" | "error" | "not-requested" | "requesting";
            /** @description The pickup confirmation number provided by the carrier. */
            confirmationNumber?: string;
            /**
             * Format: date-time
             * @description The date/time the shipment was awarded to the carrier.
             */
            requestedDate?: string;
            /**
             * Format: date-time
             * @description The date/time the pickup was confirmed by the carrier.
             */
            confirmedDate?: string;
        };
        /** @description The details for the retrieval of the bill of lading of the shipment. */
        ExternalBOLDetailsDTO: {
            /**
             * @description The status of the bill of lading retrieval.
             * @enum {string}
             */
            status?: "ok" | "pending" | "error" | "not-requested" | "requesting";
            bolNumber?: components["schemas"]["BOLNumber"];
        };
        /** @description An object with details of the invoice for the shipment. (This object won't have data until the invoice details are entered by a user via Freightview's Audit functionality). */
        ExternalInvoiceDTO: {
            /**
             * Format: date-time
             * @description Date/time the invoice details were added by user in Freightview.
             */
            createdDate?: string;
            /** @description The amount that was invoiced by the carrier. */
            invoiceAmount?: number;
            /** @description The carrier invoice number. */
            invoiceNumber?: string;
            /**
             * Format: date
             * @description Date the invoice was issued by the carrier.
             */
            invoiceDate?: string;
            /**
             * Format: date
             * @description Date the invoice was accepted by the shipper.
             */
            acceptedDate?: string;
            /** @description The amount of the discrepancy between the invoiced rate and the quoted rate in Freightview. */
            disputedAmount?: number;
            payments?: components["schemas"]["ExternalPaymentDTO"][];
        };
        ExternalPaymentDTO: {
            /** @description The amount of the payment. */
            amount?: number;
            /** @description A flag to indicate to indicate that this amount has been marked to be paid and exported out of the Freightview Audit tool (e.g. to an accounting group for payment to be sent to the carrier). */
            remitted?: boolean;
        };
        NotFoundError: {
            /** @description The name of the error. */
            name: string;
            /** @description The unique identifier for this request / response that should be referenced when requesting assistance from Freightview Support. */
            requestId: string;
            /** @description The error message. */
            message: string;
        };
        InternalServerError: {
            /** @description The name of the error. */
            name: string;
            /** @description The unique identifier for this request / response that should be referenced when requesting assistance from Freightview Support. */
            requestId: string;
            /** @description The error message. */
            message: string;
        };
        GetQuotesDtoListExternal: {
            /** @description The quotes for the shipment. */
            quotes?: components["schemas"]["ExternalQuoteDtoListExternal"][];
            /** @description Details on the carriers from which quotes were requested. */
            requestedFrom?: components["schemas"]["HydratedRecipientListExternal"][];
        };
        ExternalQuoteDtoListExternal: {
            /** @description The unique identifier for the quote in Freightview. */
            quoteId?: string;
            /** @description The unique identifier for the carrier in Freightview. */
            carrierId?: string;
            /** @description The date/time the quote was added to the shipment. */
            createdDate?: string;
            /** @description The name of the carrier transporting the shipment. */
            assetCarrierName?: string;
            /** @description The 4-digit SCAC code for the carrier transporting the shipment. */
            assetCarrierCode?: string;
            /** @description The name of the carrier providing the quote for the shipment.
             *
             *     If the quote is provided by a broker, then this is different than the `assetCarrierName`, which is the carrier actually providing transportation of the freight.
             *      */
            providerName?: string;
            /** @description The 4-digit SCAC code for the carrier providing the quote for the shipment. */
            providerCode?: string;
            /**
             * @description The type of equipment the carrier will use to transport the shipment.
             * @enum {string}
             */
            equipmentType?: "dry-van-53" | "dry-van-48" | "flatbed-53" | "flatbed-48" | "refrigerated-48" | "refrigerated-53" | "step-deck" | "flatbed-lowboy" | "air-freight" | "box-truck-16" | "box-truck-24" | "bulk-aluminum" | "bulk-auger-semi" | "bulk-auger-straight-truck" | "bulk-belt-trailer" | "bulk-convertible-hopper" | "bulk-end-dump" | "bulk-hopper" | "bulk-insulated" | "bulk-lined" | "bulk-one-tank" | "bulk-pneumatic" | "bulk-stainless" | "bulk-three-hole" | "bulk-four-hole" | "bulk-two-hole" | "bulk-walking-floor" | "bulk-bag-combo" | "conestoga" | "consolidated" | "crazy8-flatbed" | "curtain-side-van" | "drayage-20" | "drayage-40" | "drayage-45" | "drayage-48" | "drayage-53" | "flatbed-48-double-drop" | "flatbed-48-step" | "flatbed-53-step" | "flatbed-b-train" | "flatbed-heavy-haul" | "flatbed-removable-gooseneck(rgn)" | "flatbed-self-unloader" | "flatbed-with-piggyback" | "flatbed-tri-axle" | "intermodal-20" | "intermodal-40" | "intermodal-45" | "intermodal-48" | "intermodal-53" | "logistics-van-53" | "ltl" | "padded-van" | "partial-dry-van" | "partial-flatbed" | "partial-refrigerated" | "power-only" | "pup" | "refrigerated-ltl" | "sprinter-van" | "straight-truck-20" | "straight-truck-26" | "tanker" | "volume-ltl";
            /**
             * Format: date
             * @description The expiration date of the quote.
             * @example 2021-03-01
             */
            expirationDate?: string;
            /** @description The quote number specified by the carrier providing the quote. */
            quoteNum?: string;
            /** @description An identifier for the service. */
            serviceId?: string;
            /** @description A description of the service. */
            serviceDescription?: string;
            /**
             * @description The method of the pricing used for the quote.
             * @enum {string}
             */
            pricingMethod?: "contracted" | "capacity";
            /**
             * @description The type of pricing used for the quote.
             * @enum {string}
             */
            pricingType?: "pallet" | "dimensional" | "spot" | "tariff" | "density";
            /** @description A description of the pricing used to calculate the quote. */
            pricingDescription?: string;
            /** @description The total amount of this quote. Includes linehaul, fuel, and all additional charges. */
            amount?: number;
            /**
             * @description The currency of the quote amount.
             * @enum {string}
             */
            currency?: "usd";
            /** @description The reference numbers associated with the quote. */
            refNums?: components["schemas"]["QuoteRefNum"][];
            /**
             * @description The status of the quote within Freightview.
             *
             *     - `active` - The quote is active in Freightview.
             *     - `awarded` - The shipper has selected the quote and awarded the shipment to the carrier.
             *     - `retracted` - The carrier has retracted the quote.
             *     - `error` - There was an error retrieving the quote.
             *
             * @enum {string}
             */
            status?: "active" | "awarded" | "retracted" | "error";
            /**
             * @description The method by which the quote was added to the shipment.
             * @enum {string}
             */
            method?: "api" | "upload" | "email" | "manual";
            /**
             * @description The source of the quote.
             * @enum {string}
             */
            source?: "shipper" | "carrier";
            /** @description The breakdown of the various charges that make up the quote `amount`. _Not supported by all carriers._ */
            charges?: components["schemas"]["ExternalQuoteCharge"][];
            /** @description The minimum number of transit days for the transport of the shipment. */
            transitDaysMin?: number;
            /** @description The maximum number of transit days for the transport of the shipment. */
            transitDaysMax?: number;
            /** @description A flag that indicates whether another carrier will be used to provide a portion of the transportation of the shipment. */
            interline?: boolean;
            /**
             * @description The mode of transport used for the shipment.
             * @enum {string}
             */
            mode?: "truckload" | "parcel" | "ltl" | "intermodal" | "consolidated" | "air" | "ocean" | "bulk";
            /**
             * @description The payment terms used for the quote.
             * @enum {string}
             */
            paymentTerms?: "outbound-prepaid" | "outbound-collect" | "inbound-collect" | "third-party-prepaid" | "third-party-collect";
            /** @description The errors encountered when retrieving the quote. */
            errors?: components["schemas"]["ExternalQuoteError"][];
            /** @description A direct link to book the shipment with this rate within Freightview. */
            shipmentBookPageUrl?: string;
        };
        HydratedRecipientListExternal: {
            /** @description The date when the carrier user last quoted or declined to quote. */
            lastResponseDate?: string;
            /** @description A flag to indicate whether the carrier user has responded to the quote request. */
            hasResponded?: boolean;
            /** @description A flag to indicate whether the carrier user has declined to provide a quote for the shipment. */
            hasDeclined?: boolean;
            /** @description The name of the carrier user from whom a quote was requested. */
            name?: string;
            /** @description The email address of the carrier user from whom a quote was requested. */
            email?: string;
            /** @description The carrier name of the carrier user from whom a quote was requested. */
            carrierName?: string;
        };
        ExternalTrackEventDTO: {
            /**
             * Format: date-time
             * @description The full timestamp of when the event was entered into the Freightview system.
             */
            createdDate?: string;
            /**
             * Format: date
             * @description The date at which the event occurred.
             */
            eventDate?: string;
            /**
             * Format: time
             * @description The time (in 24-hr format) the event ocurred in the current location timezone.
             */
            eventTime?: string;
            /**
             * @description The type of event. Defaults to `update` if more specific `eventType` is not available.
             * @enum {string}
             */
            eventType?: "pickup" | "in-transit" | "arrived" | "departed" | "delivered" | "delayed" | "out-for-delivery" | "update" | "stop-completed" | "stop-incomplete";
            /** @description The carrier's event description. */
            summary?: string;
        };
        ExternalAddQuoteResDTO: {
            /** @description The unique identifier for the quote in Freightview. */
            quoteId?: string;
        };
        ExternalAddQuoteReqDTO: {
            /** @description The quote number specified by the carrier providing the quote. */
            quoteNum?: string;
            /** @description The total amount of this quote. */
            amount: number;
            /**
             * @description The currency of the quote amount.
             * @example usd
             * @enum {string}
             */
            currency: "usd";
            /**
             * Format: email
             * @description The carrier email address to which the quoted should be associated.
             * @example user@example.com
             */
            carrierEmail: string;
            /** @description If a carrier is not found for the carrier email provided, create a new carrier with the provided name. */
            autoCreateCarrierName?: string;
        };
        CreateShipmentRequest: {
            /** @description The shipment's locations, e.g. origin, destination and any stops in between. */
            locations: components["schemas"]["UnbookedLocationDTO"][];
            billTo?: components["schemas"]["ApiBillToDTO"];
            bolNumber?: components["schemas"]["BOLNumber"];
            equipment: components["schemas"]["ExternalEquipmentDTO"];
            customsBroker?: components["schemas"]["ExternalCustomsBroker"];
            emergencyContact?: components["schemas"]["ApiEmergencyContactDTO"];
            /** @description The items (handling units) being transported as part of the shipment. */
            items?: components["schemas"]["ExternalHandlingUnitDTO"][];
            /** @description A flag to indicate whether the shipper considers the shipment a "live load".
             *
             *     - `true` - This is a "live load" that will be shipped.
             *     - `false` - This shipment is "quote only".
             *      */
            isLiveLoad: boolean;
            /** @description The reference numbers associated with the shipment. */
            refNums?: components["schemas"]["RefNum"][];
        };
        UnbookedLocationDTO: {
            /** @description Company name for the location. */
            company?: string;
            /** @description Address for the location. */
            address?: string;
            /** @description Address line 2 for the location. */
            address2?: string;
            /**
             * @description Postal code of the location in US or Canadian format.
             *
             *     Valid formats (USA):
             *       - `10111`
             *       - `10111-1111`
             *
             *     Valid formats (Canada):
             *       - `A9A9A9`
             *       - `A9A 9A9`
             *       - `A9A-9A9`
             *
             * @example 10111
             */
            postalCode: string;
            /** @description City for the location. */
            city?: string;
            /** @description Two character state / province abbreviation for the location. */
            state?: string;
            /**
             * @description Two character country code for the location.
             * @example us
             * @enum {string}
             */
            country: "us" | "ca";
            /**
             * Format: date
             * @description The date of the stop at the location. Required for origin location (i.e. `sequence : 0``).
             *
             * @example 2021-03-01
             */
            stopDate?: string;
            /**
             * @description An indicator of whether the stop should be made on the stop date, or by the stop date.
             * @default on
             * @enum {string}
             */
            stopDateType: "on" | "by";
            /**
             * @description An indicator of whether freight will be picked up, delivered, or both at this stop.
             * @enum {string}
             */
            stopType: "pickup" | "delivery" | "both";
            /** @description The sequence of the location within the shipment, starting at 0. */
            sequence: number;
            /** @description The accessorials associated with the location. */
            accessorials?: components["schemas"]["LocationAccessorialDTO"][];
            /** @description Reference numbers for the location. */
            refNums?: components["schemas"]["LocationRefNum"][];
            /**
             * @description The time the location will open in 24-hr format.
             * @default 08:00
             * @example 15:30
             */
            opensAt: string;
            /**
             * @description The time the location will close in 24-hr format.
             * @default 17:00
             * @example 15:30
             */
            closesAt: string;
            /** @description The name of a contact person at the location. */
            contactName?: string;
            /** @description The email address for the contact at the location. */
            contactEmail?: string;
            /** @description The phone number for the contact at the location. */
            contactPhone?: string;
            /** @description The phone number extension for the contact at the location. */
            contactPhoneExt?: string;
            /** @description The special instructions for the location. */
            instructions?: string;
        };
        /** @description The customs broker information for the shipment. _Required if the shipment crosses the US-Canada border._ */
        ExternalCustomsBroker: {
            /** @description The address of the customs broker. */
            address?: string;
            /** @description The address line 2 of the customs broker. */
            address2?: string;
            /** @description The city of the customs broker. */
            city?: string;
            /** @description The company name of the customs broker. */
            companyName: string;
            /**
             * @description The two-digit country code for the customs broker.
             * @example us
             * @enum {string}
             */
            country?: "us";
            /**
             * Format: email
             * @description The email address of the customs broker.
             */
            email?: string;
            /**
             * @description The phone number of the customs broker.
             * @example (555) 555-5555
             */
            phone: string;
            /** @description The phone number extension of the customs broker. */
            phoneExt?: string;
            /**
             * @description The postal code of the customs broker in US or Canadian format.
             *
             *     Valid formats (USA):
             *       - `10111`
             *       - `10111-1111`
             *
             *     Valid formats (Canada):
             *       - `A9A9A9`
             *       - `A9A 9A9`
             *       - `A9A-9A9`
             *
             * @example 10111
             */
            postalCode?: string;
            /** @description The two-digit state / province code for the customs broker. */
            state?: string;
        };
        /** Awarded Shipment */
        EditBookedShipmentDTO: {
            /** @description The shipment's locations, e.g. origin, destination and any stops in between. */
            locations: components["schemas"]["BookedLocationDTO"][];
            billTo?: components["schemas"]["ApiBillToDTO"];
            bolNumber?: components["schemas"]["BOLNumber"];
            equipment: components["schemas"]["ExternalEquipmentDTO"];
            customsBroker?: components["schemas"]["ExternalCustomsBroker"];
            emergencyContact?: components["schemas"]["ApiEmergencyContactDTO"];
            /** @description The items (handling units) being transported as part of the shipment. */
            items?: components["schemas"]["ExternalHandlingUnitDTO"][];
            /** @description A flag to indicate whether the shipper considers the shipment a "live load".
             *
             *     - `true` - This is a "live load" that will be shipped.
             *     - `false` - This shipment is "quote only".
             *      */
            isLiveLoad: boolean;
            /** @description The reference numbers associated with the shipment. */
            refNums?: components["schemas"]["RefNum"][];
        };
        BookedLocationDTO: {
            /** @description Company name for the location. */
            company: string;
            /** @description Address for the location. */
            address: string;
            /** @description Address line 2 for the location. */
            address2?: string;
            /** @description City for the location. */
            city?: string;
            /** @description Two character state / province abbreviation for the location. */
            state?: string;
            /**
             * @description Postal code of the location in US or Canadian format.
             *
             *     Valid formats (USA):
             *       - `10111`
             *       - `10111-1111`
             *
             *     Valid formats (Canada):
             *       - `A9A9A9`
             *       - `A9A 9A9`
             *       - `A9A-9A9`
             *
             * @example 10111
             */
            postalCode: string;
            /**
             * @description Two character country code for the location.
             * @example us
             * @enum {string}
             */
            country: "us" | "ca";
            /**
             * Format: date
             * @description The date of the stop at the location.
             * @example 2021-03-01
             */
            stopDate?: string;
            /**
             * @description An indicator of whether the stop should be made on the stop date, or by the stop date.
             * @enum {string}
             */
            stopDateType?: "on" | "by";
            /**
             * @description An indicator of whether freight will be picked up, delivered, or both at this stop.
             * @enum {string}
             */
            stopType: "pickup" | "delivery" | "both";
            /** @description The sequence of the location within the shipment, starting at 0. */
            sequence: number;
            /** @description The accessorials associated with the location. */
            accessorials?: components["schemas"]["LocationAccessorialDTO"][];
            /** @description Reference numbers for the location. */
            refNums?: components["schemas"]["LocationRefNum"][];
            /**
             * @description The time the location will open in 24-hr format.
             * @example 15:30
             */
            opensAt: string;
            /**
             * @description The time the location will close in 24-hr format.
             * @example 15:30
             */
            closesAt: string;
            /** @description The name of a contact person at the location. */
            contactName?: string;
            /** @description The email address for the contact at the location. */
            contactEmail?: string;
            /** @description The phone number for the contact at the location. */
            contactPhone?: string;
            /** @description The phone number extension for the contact at the location. */
            contactPhoneExt?: string;
            /** @description The special instructions for the location. */
            instructions?: string;
        };
        /** Un-awarded Shipment */
        EditUnbookedShipmentDTO: {
            /** @description The shipment's locations, e.g. origin, destination and any stops in between. */
            locations: components["schemas"]["UnbookedLocationDTO"][];
            billTo?: components["schemas"]["ApiBillToDTO"];
            bolNumber?: components["schemas"]["BOLNumber"];
            equipment: components["schemas"]["ExternalEquipmentDTO"];
            customsBroker?: components["schemas"]["ExternalCustomsBroker"];
            emergencyContact?: components["schemas"]["ApiEmergencyContactDTO"];
            /** @description The items (handling units) being transported as part of the shipment. */
            items?: components["schemas"]["ExternalHandlingUnitDTO"][];
            /** @description A flag to indicate whether the shipper considers the shipment a "live load".
             *
             *     - `true` - This is a "live load" that will be shipped.
             *     - `false` - This shipment is "quote only".
             *      */
            isLiveLoad: boolean;
            /** @description The reference numbers associated with the shipment. */
            refNums?: components["schemas"]["RefNum"][];
        };
        ExternalAwardLoadDTO: {
            /** @description The unique identifier for the quote in Freightview. */
            quoteId: string;
            /** @description The items (handling units) being transported as part of the shipment. _Required if `createBOL` is true._ */
            items?: components["schemas"]["ExternalHandlingUnitDTO"][];
            equipment?: components["schemas"]["ApiEquipmentDTO"];
            /** @description The shipment's locations, e.g. origin, destination and any stops in between. */
            locations: components["schemas"]["BookedLocationDTO"][];
            /**
             * @description A flag to indicate whether a Bill of Lading should be created for the shipment.
             * @default true
             */
            createBOL: boolean;
            /**
             * @description A flag to indicate whether the shipment should be scheduled with the carrier for pickup.
             * @default true
             */
            schedulePickup: boolean;
            customsBroker?: components["schemas"]["ExternalCustomsBroker"];
            emergencyContact?: components["schemas"]["ApiEmergencyContactDTO"];
            billTo?: components["schemas"]["ApiBillToDTO"];
            bolNumber?: components["schemas"]["BOLNumber"];
        };
        /** @description The equipment for the shipment. */
        ApiEquipmentDTO: {
            /** @description The accessorials associated with the equipment.
             *
             *     - `chains` - Only applicable for flatbed equipment.
             *     - `e-track` - Only applicable for dry van equipment.
             *     - `food-grade` - Only applicable for dry van and refrigerated equipment.
             *     - `load-bars` - Only applicable for dry van equipment.
             *     - `tarps` - Only applicable for flatbed equipment.
             *     - `temp` - Only applicable for refrigerated equipment.
             *     - `straps` - Only applicable for dry van and flatbed equipment.
             *     - `protect-from-freezing` Only applicable for LTL equipment.
             *     - `liftgate` - Only applicable for dry van, straight truck, and box truck equipment.
             *     - `team-driver` - Applicable for all equipment types.
             *     - `tanker-endorsement` - Only applicable for dry van, flatbed, and refrigerated equipment.
             *      */
            accessorials?: components["schemas"]["ApiEquipmentAccessorialDTO"][];
        };
        ApiEquipmentAccessorialDTO: {
            /**
             * @description The identifier for the accessorial.
             * @enum {string}
             */
            key: "chains" | "e-track" | "food-grade" | "load-bars" | "tarps" | "temp" | "straps" | "protect-from-freezing" | "liftgate" | "team-driver" | "tanker-endorsement";
        };
        ApiEquipmentAccessorialCount: {
            key: "chains";
        } & (Omit<components["schemas"]["ApiEquipmentAccessorialDTO"], "key"> & {
            /** @description A count of how many of the accessorial are needed. */
            count: number;
        });
        ApiEquipmentAccessorialTemp: {
            key: "temp";
        } & (Omit<components["schemas"]["ApiEquipmentAccessorialDTO"], "key"> & {
            /** @description The minimum temperature for the equipment. */
            min: number;
            /** @description The maximum temperature for the equipment. */
            max: number;
            /**
             * @description The unit of measurement for the temperature.
             * @enum {string}
             */
            uom: "f" | "c";
        });
        ApiEquipmentAccessorialTarps: {
            key: "tarps";
        } & (Omit<components["schemas"]["ApiEquipmentAccessorialDTO"], "key"> & {
            /**
             * @description The size of tarps needed (in feet).
             * @enum {number}
             */
            size: 4 | 6 | 8;
        });
        ApiEquipmentAccessorialSimple: {
            key: "e-track";
        } & Omit<components["schemas"]["ApiEquipmentAccessorialDTO"], "key">;
        ManualConfirmDTO: {
            /** @description The confirmation number for the pickup (from the carrier). */
            pickupConfirmationNumber: string;
        };
        ExternalRetractDTO: {
            /** @description A flag to indicate whether the carrier should be notified of the retraction. */
            notifyCarrier: boolean;
        };
        ExternalRequestQuotesDTO: {
            /** @description The carrier email addresses from whom to request quotes. */
            emails: string[];
            /** @description A field to add an additional message to the request for quotes. This message will be appended to the shipment details which will be included automatically. */
            message?: string;
        };
        /** @description The Bill of Lading number for the shipment. Auto-generated by Freightview upon awarding unless value provided by shipper. */
        BOLNumber: string;
        /**
         * @description The size of labels you would like to generate for the shipment.
         *
         *     **N/A for parcel shipments**, which default to `4x6`.
         *
         * @default 4x6
         * @enum {string}
         */
        LabelSize: "2.25x4" | "3x4" | "3x5" | "3.5x5" | "4x1" | "4x2" | "4x3.3" | "4x6" | "4x8" | "5.5x8.5" | "8.5x11";
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    authGetToken: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["GenerateTokenReqDTO"];
                "application/x-www-form-urlencoded": components["schemas"]["GenerateTokenReqDTO"];
            };
        };
        responses: {
            /** @description Success */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TokenResponseDTO"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["BadRequestError"] | components["schemas"]["ValidationError"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UnauthorizedError"];
                };
            };
        };
    };
    shipmentsSearchShipments: {
        parameters: {
            query?: {
                /** @description - If search results exceed 20 shipments, then a `continuationToken` value will be returned in the response body.
                 *     - Pass the `continuationToken` returned in the response body as a query parameter to retrieve the next set of results.
                 *     - If `continuationToken` is not present, then no further results are available.
                 *      */
                continuationToken?: string;
                search?: string;
                /** @description Search shipments by their current audit status.
                 *
                 *       - `outstanding` - Invoice balance is fully outstanding
                 *       - `accepted` - Payment has been approved
                 *       - `disputed` - Invoiced amount is in dispute
                 *       - `archived` - Invoice has been remitted for payment
                 *
                 *     A shipment can have multiple audit statuses. For example, when partial payment for an invoice has been approved while still disputing the remaining balance.
                 *      */
                auditStatus?: "outstanding" | "accepted" | "disputed" | "archived";
                /** @description Start of delivery date range (for searching shipments by delivery date range). */
                deliveryDateStart?: string;
                /** @description End of delivery date range (for searching shipments by delivery date range). */
                deliveryDateEnd?: string;
                /** @description Start of booked date range (for searching shipments by booked date range). */
                bookedDateStart?: string;
                /** @description End of booked date range (for searching shipments by booked date range). */
                bookedDateEnd?: string;
                /** @description The direction of the the shipment (based on the locations setup for the account). */
                direction?: ("inbound" | "outbound" | "third-party")[];
                /** @description A flag to indicate whether the shipment has been archived in Freightview. */
                isArchived?: boolean;
                /** @description A flag to indicate whether the freight charges for the shipment are being paid by the party creating the shipment. Also known as "customer routed" freight.
                 *
                 *     - `true` - The freight charges for the shipment will **not** be paid by the party setting up the shipment.
                 *     - `false` - The freight charges for the shipment will be paid by the party setting up the shipment.
                 *      */
                isFreightCollect?: boolean;
                /** @description A flag that indicates whether another carrier will be used to provide a portion of the transport for the shipment. */
                isInterline?: boolean;
                /** @description The mode of transport used for the shipment. */
                mode?: ("truckload" | "parcel" | "ltl" | "intermodal" | "consolidated" | "air" | "ocean" | "bulk")[];
                /** @description Start of pickup date range (for searching shipments by pickup date range). */
                pickupDateStart?: string;
                /** @description End of pickup date range (for searching shipments by pickup date range). */
                pickupDateEnd?: string;
                /** @description The method for the pricing.
                 *
                 *     - `contracted` - The pricing is based on customer's contract with the carrier.
                 *     - `capacity` - The pricing is based on the carrier's current capacity in a given lane. (e.g. a spot quote).
                 *      */
                pricingMethod?: ("contracted" | "capacity")[];
                /** @description The type of pricing.
                 *      */
                pricingType?: ("pallet" | "dimensional" | "spot" | "tariff" | "density")[];
                /** @description - `pending` - Shipment has been created.
                 *     - `awarded` - Shipment has been awarded to a carrier.
                 *     - `confirmed` - Shipment has been confirmed by carrier.
                 *     - `picked-up` - Shipment has been picked up.
                 *     - `delivered` - Shipment has been delivered.
                 *     - `canceled` - Shipment has been canceled by the shipper.
                 *      */
                status?: ("pending" | "awarded" | "confirmed" | "picked-up" | "delivered" | "canceled")[];
                /**
                 * @description The Bill of Lading number for the shipment.
                 *
                 * @example 7654321
                 */
                bolNumber?: string;
                /**
                 * @description A reference number associated with the shipment.
                 *
                 * @example PO#123456
                 */
                referenceNumber?: string;
                /**
                 * @description The tracking or PRO number for the shipment.
                 *
                 * @example 1Z999999999999999
                 */
                trackingNumber?: string;
                /**
                 * @description The pickup confirmation number for the shipment.
                 *
                 * @example 123456789
                 */
                pickupConfirmationNumber?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    /** @description The unique identifier for this request / response that should be referenced when requesting assistance from Freightview Support. */
                    "x-request-id"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ExternalPagedShipmentsDTO"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ValidationError"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UnauthorizedError"];
                };
            };
        };
    };
    shipmentsGetShipmentById: {
        parameters: {
            query?: {
                labelSize?: components["schemas"]["LabelSize"];
                labelCount?: 1 | 2 | 4;
            };
            header?: never;
            path: {
                /** @description The unique identifier in Freightview for the shipment. */
                shipmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    /** @description The unique identifier for this request / response that should be referenced when requesting assistance from Freightview Support. */
                    "x-request-id"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ExternalShipmentDTO"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ValidationError"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UnauthorizedError"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NotFoundError"];
                };
            };
        };
    };
    shipmentsGetQuotes: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The unique identifier in Freightview for the shipment. */
                shipmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    /** @description The unique identifier for this request / response that should be referenced when requesting assistance from Freightview Support. */
                    "x-request-id"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GetQuotesDtoListExternal"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ValidationError"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UnauthorizedError"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NotFoundError"];
                };
            };
        };
    };
    shipmentsGetTrackHistory: {
        parameters: {
            query?: {
                /** @description The identifier of the item in Freightview you wish to track. Required if an index is specified. */
                itemId?: string;
                /** @description The zero-based index for a given itemId in Freightview you wish to track. For example, if you want to track the second entity of an item with a quantity of 2 in the group of items, specify the number 1. */
                itemIndex?: string;
            };
            header?: never;
            path: {
                /** @description The unique identifier in Freightview for the shipment. */
                shipmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success */
            200: {
                headers: {
                    /** @description The unique identifier for this request / response that should be referenced when requesting assistance from Freightview Support. */
                    "x-request-id"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ExternalTrackEventDTO"][];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ValidationError"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UnauthorizedError"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NotFoundError"];
                };
            };
        };
    };
    truckloadAddQuote: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The unique identifier in Freightview for the shipment. */
                shipmentId: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["ExternalAddQuoteReqDTO"];
            };
        };
        responses: {
            /** @description Created */
            201: {
                headers: {
                    /** @description The unique identifier for this request / response that should be referenced when requesting assistance from Freightview Support. */
                    "x-request-id"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ExternalAddQuoteResDTO"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ValidationError"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UnauthorizedError"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NotFoundError"];
                };
            };
        };
    };
    truckloadCreateShipment: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["CreateShipmentRequest"];
            };
        };
        responses: {
            /** @description Created */
            201: {
                headers: {
                    /** @description The unique identifier for this request / response that should be referenced when requesting assistance from Freightview Support. */
                    "x-request-id"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ExternalShipmentDTO"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ValidationError"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UnauthorizedError"];
                };
            };
        };
    };
    truckloadEditShipment: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The unique identifier in Freightview for the shipment. */
                shipmentId: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["EditBookedShipmentDTO"] | components["schemas"]["EditUnbookedShipmentDTO"];
            };
        };
        responses: {
            /** @description Success */
            200: {
                headers: {
                    /** @description The unique identifier for this request / response that should be referenced when requesting assistance from Freightview Support. */
                    "x-request-id"?: string;
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ExternalShipmentDTO"];
                };
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ValidationError"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UnauthorizedError"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NotFoundError"];
                };
            };
        };
    };
    truckloadCancelShipment: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The unique identifier in Freightview for the shipment. */
                shipmentId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No Content */
            204: {
                headers: {
                    /** @description The unique identifier for this request / response that should be referenced when requesting assistance from Freightview Support. */
                    "x-request-id"?: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ValidationError"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UnauthorizedError"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NotFoundError"];
                };
            };
        };
    };
    truckloadAwardShipment: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The unique identifier in Freightview for the shipment. */
                shipmentId: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["ExternalAwardLoadDTO"];
            };
        };
        responses: {
            /** @description No Content */
            204: {
                headers: {
                    /** @description The unique identifier for this request / response that should be referenced when requesting assistance from Freightview Support. */
                    "x-request-id"?: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ValidationError"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UnauthorizedError"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NotFoundError"];
                };
            };
            /** @description Internal Server Error */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InternalServerError"];
                };
            };
        };
    };
    truckloadConfirmShipment: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The unique identifier in Freightview for the shipment. */
                shipmentId: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["ManualConfirmDTO"];
            };
        };
        responses: {
            /** @description No Content */
            204: {
                headers: {
                    /** @description The unique identifier for this request / response that should be referenced when requesting assistance from Freightview Support. */
                    "x-request-id"?: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ValidationError"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UnauthorizedError"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NotFoundError"];
                };
            };
        };
    };
    truckloadRetractAwardedShipment: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The unique identifier in Freightview for the shipment. */
                shipmentId: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["ExternalRetractDTO"];
            };
        };
        responses: {
            /** @description No Content */
            204: {
                headers: {
                    /** @description The unique identifier for this request / response that should be referenced when requesting assistance from Freightview Support. */
                    "x-request-id"?: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ValidationError"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UnauthorizedError"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NotFoundError"];
                };
            };
        };
    };
    truckloadRequestForQuotes: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description The unique identifier in Freightview for the shipment. */
                shipmentId: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": components["schemas"]["ExternalRequestQuotesDTO"];
            };
        };
        responses: {
            /** @description No Content */
            204: {
                headers: {
                    /** @description The unique identifier for this request / response that should be referenced when requesting assistance from Freightview Support. */
                    "x-request-id"?: string;
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Bad Request */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ValidationError"];
                };
            };
            /** @description Unauthorized */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UnauthorizedError"];
                };
            };
            /** @description Not Found */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NotFoundError"];
                };
            };
        };
    };
}
