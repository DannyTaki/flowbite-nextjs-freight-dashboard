/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/api/Health": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Health Check
     * @description Monitor App Service instance
     */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    put?: never;
    /**
     * Health Check
     * @description Monitor App Service instance
     */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description Success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content?: never;
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/Orders": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /**
     * Create or Modify Orders
     * @description Create a new order or update existing by Reference ID
     */
    post: operations["UploadOrder"];
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/api/Orders/{referenceId}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    post?: never;
    /**
     * Delete Order
     * @description Delete an order by Reference ID
     */
    delete: operations["DeleteOrder"];
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    "ITM.Shared.Functions.OrderProcessing.Common.Models.Results.Result": {
      /** @description Determines if the operation was successful */
      isSuccess?: boolean;
      /** @description List of error messages */
      errorMessages?: string[];
    };
    "ITM.Shared.Functions.OrderProcessing.Common.Models.UploadOrder.Commodity": {
      /**
       * @description An optional unique string identifier that can be used to specify a commodity that is already saved in the MyCarrier platform
       * @example My Product ID
       */
      productID?: string;
      /**
       * @description An optional string to be used in the absence of a productid that specifies the commodity description for a specific commodity in a specific handling unit
       * @example Some text
       */
      commodityDescription?: string;
      /**
       * @description An optional non-decimal numeric string to be used in the absence of a productid that specifies the commodity NMFC code for a specific commodity in a specific handling unit
       * @example 32100
       */
      commodityNMFC?: string;
      /**
       * @description An optional non-decimal numeric string to be used in the absence of a productid that specifies the commodity NMFC item sub code for a specific commodity in a specific handling unit
       * @example 2
       */
      commoditySub?: string;
      /**
       * @description A non-optional non-decimal numeric string to be used in the absence of a productid that specifies the commodity class for a specific commodity in a specific handling unit
       * @enum {string}
       */
      commodityClass?:
        | "50"
        | "55"
        | "60"
        | "65"
        | "70"
        | "77.5"
        | "85"
        | "92.5"
        | "100"
        | "110"
        | "125"
        | "150"
        | "175"
        | "200"
        | "250"
        | "300"
        | "400"
        | "500";
      /**
       * @description A non-optional non-decimal numeric string that specifies the number of pieces for a specific commodity in a specific handling unit
       * @default 1
       * @example 1
       */
      commodityPieces: string;
      /**
       * @description A non-optional non-decimal numeric string to be used in the absence of a productid that specifies the weight for a specific commodity in a specific handling unit using the units of measurement specified in the customerâ€™s default settings
       * @example 100
       */
      commodityWeight?: string;
      /**
       * @description A non-optional string enumeration that specifies the type of packaging used for a specific commodity in a specific handling unit
       * @enum {string}
       */
      commodityPackingType?:
        | "Bag"
        | "Bale"
        | "Box"
        | "Bucket"
        | "Bundle"
        | "Carton"
        | "Case"
        | "Crate"
        | "Cylinder"
        | "Drums"
        | "Pail"
        | "Reel"
        | "Roll"
        | "Tote"
        | "Tube";
      /**
       * @description An optional string enumeration that specifies that the specific commodity in a specific handling unit is classified as hazardous material
       * @default NO
       * @example Yes
       * @enum {string}
       */
      commodityHazMat:
        | "YES"
        | "NO"
        | "TRUE"
        | "FALSE"
        | "Y"
        | "N"
        | "T"
        | "F"
        | "1"
        | "0";
      /**
       * @description An optional string to be used in conjunction with the commodityHazMat property using the United Nations (UN) or North American (NA) format that specifies the hazardous material identifier for the specific commodity in the specific handling unit
       * @example UN2333
       */
      hazmatIDNumber?: string;
      /**
       * @description An optional string to be used in conjunction with the commodityHazMat property that specifies the full proper shipping name for the specific commodity in the specific handling unit
       * @example 1, 3-Dimethylbutylamine
       */
      hazmatProperShippingName?: string;
      /**
       * @description An optional string to be used in conjunction with the commodityHazMat property that specifies the Federal Motor Carrier Safety Administration (FMCSA) hazard class for the specific commodity in the specific handling unit
       * @example 3
       */
      hazmatHazardClass?: string;
      /**
       * @description An optional string enumeration to be used in conjunction with the commodityHazMat property that specifies the hazardous material packing group type indicating the degree of danger for a hazardous material in the specific commodity in the specific handling unit
       * @enum {string}
       */
      hazmatPackingGroup?: "I" | "II" | "III" | "NONE";
      /**
       * @description An semi-optional string to be used in conjunction with the isVicsBol property that specifies the Sales Order number of the which the commodity is a line item of to be displayed on the VICs Bill of Lading
       * @example 123456
       */
      customerOrderNumber?: string;
    };
    "ITM.Shared.Functions.OrderProcessing.Common.Models.UploadOrder.DataModel": {
      /** @description The order(s) payload */
      orders?: components["schemas"]["ITM.Shared.Functions.OrderProcessing.Common.Models.UploadOrder.Order"][];
    };
    "ITM.Shared.Functions.OrderProcessing.Common.Models.UploadOrder.DestinationAccessorials": {
      /**
       * @description An optional string enumeration that specifies whether an order destination stop requires the carrier to notify the destination recipient before a delivery is attempted when an order is quoted or dispatched
       * @default NO
       * @example Yes
       * @enum {string}
       */
      notifyBeforeDelivery:
        | "YES"
        | "NO"
        | "TRUE"
        | "FALSE"
        | "Y"
        | "N"
        | "T"
        | "F"
        | "1"
        | "0";
      /**
       * @description An optional string enumeration that specifies whether an order destination stop requires the carrier to perform an liftgate delivery when an order is quoted or dispatched
       * @default NO
       * @example No
       * @enum {string}
       */
      liftgateDelivery:
        | "YES"
        | "NO"
        | "TRUE"
        | "FALSE"
        | "Y"
        | "N"
        | "T"
        | "F"
        | "1"
        | "0";
      /**
       * @description An optional string enumeration that specifies whether an order destination stop requires the carrier to sort or segregate the shipment from when an order is quoted or dispatched
       * @default NO
       * @example No
       * @enum {string}
       */
      sortOrSegregateDelivery:
        | "YES"
        | "NO"
        | "TRUE"
        | "FALSE"
        | "Y"
        | "N"
        | "T"
        | "F"
        | "1"
        | "0";
      /**
       * @description An optional string enumeration that specifies whether an order destination stop requires the carrier to perform an inside delivery when an order is quoted or dispatched
       * @default NO
       * @example No
       * @enum {string}
       */
      insideDelivery:
        | "YES"
        | "NO"
        | "TRUE"
        | "FALSE"
        | "Y"
        | "N"
        | "T"
        | "F"
        | "1"
        | "0";
      /**
       * @description An optional string enumeration that specifies whether an order destination stop requires the carrier to schedule an delivery appointment when an order is quoted or dispatched
       * @default NO
       * @example No
       * @enum {string}
       */
      deliveryAppointment:
        | "YES"
        | "NO"
        | "TRUE"
        | "FALSE"
        | "Y"
        | "N"
        | "T"
        | "F"
        | "1"
        | "0";
    };
    "ITM.Shared.Functions.OrderProcessing.Common.Models.UploadOrder.DestinationStop": {
      /**
       * @description An optional string to be used in the absence of a locationId value that specifies the name of the company at the destination stop
       * @example MyCarrier TMS
       */
      companyName?: string;
      /**
       * @description An optional string to be used in the absence of a locationId value that specifies the primary street address information at the destination stop
       * @example 598 Virginia Street
       */
      streetLine1?: string;
      /**
       * @description An optional string to be used in the absence of a locationId value that specifies the secondary street address information at the destination stop
       * @example Apartment 123
       */
      streetLine2?: string;
      /**
       * @description An optional string to be used in the absence of a locationId value that specifies the city at the destination stop
       * @example River Grove
       */
      city?: string;
      /**
       * @description Enum (USA): AL, AK, AZ, AR, CA, CO, CT, DE, FL, GA, HI, ID, IL, IN, IA, KS, KY, LA, ME, MD, MA, MI, MN, MS, MO, MT, NE, NV, NH, NJ, NM, NY, NC, ND, OH, OK, OR, PA, RI, SC, SD, TN, TX, UT, VT, VA, WA, WV, WI, WY.<br />Enum (CAN): AB, BC, MB, NB, NL, NS, NT, NU, ON, PE, QC, SK, YT.<br />An optional string to be used in the absence of a locationId value that specifies a two letter abbreviation of the State or Province at the destination stop
       * @example IL
       */
      state?: string;
      /**
       * @description An optional string to be used in the absence of a locationId value that specifies the Postal code at the destination stop
       * @example 60171
       */
      zip?: string;
      /**
       * @description Abbreviation of country (using ISO 3166 standards)
       * @default USA
       * @enum {string}
       */
      country: "USA" | "CAN";
      /**
       * @description An optional string to be used in the absence of a locationId value that specifies the type of location at the destination stop for identification of limited access locations
       * @default Business
       * @enum {string}
       */
      locationType:
        | "Business"
        | "Residential"
        | "Trade Show"
        | "Airport"
        | "Camp"
        | "Church"
        | "Construction Site"
        | "Country Club"
        | "Fair/Amusement/Park"
        | "Farm"
        | "Government Site"
        | "Grocery Warehouse"
        | "Hospital"
        | "Hotel"
        | "Limited Access"
        | "Military Installation"
        | "Mine Site"
        | "Native American Reservation"
        | "Nursing Home"
        | "Pier"
        | "Prison"
        | "Resort"
        | "School"
        | "Self-Storage"
        | "Utility Site";
      /**
       * @description An optional string to be used in the absence of a locationId value that specifies the first name of the destination stop contact. May be required for some shipments
       * @example Jane
       */
      contactFirstName?: string;
      /**
       * @description An optional string to be used in the absence of a locationId value that specifies the last name of the destination stop contact. May be required for some shipments
       * @example Wright
       */
      contactLastName?: string;
      /**
       * @description An optional string to be used in the absence of a locationId value that specifies the email address of the destination stop contact. May be required for some shipments
       * @example jane.wright@test.com
       */
      contactEmail?: string;
      /**
       * @description An optional non-formatted string to be used in the absence of a locationId value that specifies the telephone number of the destination stop contact. May be required for some shipments
       * @example (555) 555-1234
       */
      contactPhone?: string;
      /**
       * @description An optional numeric only string to be used in the absence of a locationId value that specifies the telephone extension of the destination stop contact if applicable
       * @example 30
       */
      ext?: string;
      /**
       * @description An optional formatted string to be used in the absence of a locationId value that specifies the time of day local to the destination stop that the destination stop is open to pickups in HH:mm AM or HH:mm PM format
       * @example 9:00 AM
       */
      readyTime?: string;
      /**
       * @description An optional formatted string to be used in the absence of a locationId value that specifies the time of day local to the destination stop that the destination stop is closed to pickups in HH:mm AM or HH:mm PM format
       * @example 4:00 PM
       */
      closeTime?: string;
      /**
       * @description An optional string to be used in the absence of a locationId value that specifies any additional instructions for pickup at the destination stop
       * @example Some instruction notes
       */
      instructions?: string;
      /**
       * @description An optional unique string identifier that can be used to specify a destination stop location that is already saved in the MyCarrier platform
       * @example My destination locationId
       */
      locationID?: string;
    };
    "ITM.Shared.Functions.OrderProcessing.Common.Models.UploadOrder.Order": {
      /**
       * @description A unique identifier that can be used to correlate orders between your source system and the MyCarrier platform
       * @example Jun-25-2023 432 Rr
       */
      quoteReferenceID: string;
      /**
       * @description A string enumeration that specifies the mode of freight an order will use to quote and dispatch
       * @default LTL
       * @enum {string}
       */
      serviceType: "LTL" | "TL" | "GFP";
      /**
       * @description A string representation of the date the order should be picked up using MM/dd/YYYY format
       * @default Current Date
       * @example 06/25/2023
       */
      pickupDate: string;
      /**
       * @description A string enumeration that specifies the type of payment this order will use to quote and dispatch
       * @default Prepaid
       * @enum {string}
       */
      paymentDirection:
        | "Prepaid"
        | "Inbound Collect"
        | "Third Party"
        | "Outbound Collect";
      /**
       * @description An optional string enumeration that specifies the carrier this order will use to quote and dispatch
       * @example ABFS
       * @enum {string}
       */
      carrier?:
        | "AACT"
        | "ABFS"
        | "AGCE"
        | "AVRT"
        | "BRTC"
        | "BTVP"
        | "BTYT"
        | "CCYQ"
        | "CLNI"
        | "CMFC"
        | "CRVG"
        | "CTBV"
        | "CTII"
        | "CTIIP"
        | "CXIT"
        | "DAFG"
        | "DAYR"
        | "DBDE"
        | "DHRN"
        | "DLDS"
        | "DPHE"
        | "DTST"
        | "DUBL"
        | "DYLT"
        | "EDXI"
        | "EFWW"
        | "EMRG"
        | "EXLA"
        | "FCSY"
        | "FFRT"
        | "FLOK"
        | "FTSC"
        | "FWDN"
        | "FXFE"
        | "HLNF"
        | "HMES"
        | "HRCF"
        | "HWEP"
        | "JPXS"
        | "KUTZ"
        | "LAXV"
        | "LOADS"
        | "MANI"
        | "MGUL"
        | "MIDW"
        | "MIHD"
        | "MOLO"
        | "MONC"
        | "MTJG"
        | "MTVL"
        | "NEMF"
        | "NMTF"
        | "NPME"
        | "OAKH"
        | "ODFL"
        | "OVLD"
        | "PAAF"
        | "PENS"
        | "PFEG"
        | "PITD"
        | "POGL"
        | "POLT"
        | "PYLE"
        | "RDFS"
        | "RDWY"
        | "RETL"
        | "RISG"
        | "RIST"
        | "RLCA"
        | "RXIC"
        | "RXO"
        | "SAIA"
        | "SEFL"
        | "SMTL"
        | "STDF"
        | "SUON"
        | "TAXA"
        | "TDTW"
        | "TOTL"
        | "TTFY"
        | "UGFP"
        | "UPGF"
        | "UPPD"
        | "USRD"
        | "UTPA"
        | "VSXP"
        | "WARD"
        | "WAYD"
        | "WAYF"
        | "XGSI"
        | "XPOL";
      /**
       * @description An optional string enumeration that specifies the level of service that this order will use to quote and dispatch
       * @default Standard
       * @enum {string}
       */
      carrierService:
        | "Standard"
        | "Morning Guaranteed"
        | "Afternoon Guaranteed";
      /**
       * @description Default: Will use the customer settings default special instructions property if set in the customer settings and not specified in the order request object otherwise will be an empty string <br />An optional string message to include in the order that will be sent to the carrier(s) when quoting and dispatching
       * @example Further Inspection Required
       */
      specialInstructions?: string;
      /**
       * @description An optional string that specified the full name of the emergency contact if the order contains hazardous materials
       * @example James Doe
       */
      emergencyContactPersonName?: string;
      /**
       * @description An optional string that specifies the phone number of the emergency contact if the order contains hazardous materials
       * @example (555) 555-5555
       */
      emergencyContactPhone?: string;
      /**
       * @description An optional string to be used to proceed with automatic dispatch
       * @default NO
       * @example Yes
       * @enum {string}
       */
      readyToDispatch:
        | "YES"
        | "NO"
        | "TRUE"
        | "FALSE"
        | "Y"
        | "N"
        | "T"
        | "F"
        | "1"
        | "0";
      /**
       * @description An optional string that specifies the date and time an order was created in the source system
       * @example 06/25/2023 9:00 AM
       */
      timeCreated?: string;
      /**
       * @description An optional string enumeration that specifies if the order should create a standard Bill of Lading or a VICs Bill of Lading when the order is dispatched
       * @default NO
       * @example Yes
       * @enum {string}
       */
      isVicsBol:
        | "YES"
        | "NO"
        | "TRUE"
        | "FALSE"
        | "Y"
        | "N"
        | "T"
        | "F"
        | "1"
        | "0";
      /**
       * @description An optional string to be used in conjunction with isVicsBol that specifies the prefix to include when generating a VICs Bill of Lading number when an order is dispatched
       * @example 058645621
       */
      vicsBolPrefix?: string;
      /**
       * @description An optional string to be used when not utilizing auto-pro/pre-pro functionality to specify the Pro number when an order is dispatched
       * @example 5968175596
       */
      proNumber?: string;
      references?: components["schemas"]["ITM.Shared.Functions.OrderProcessing.Common.Models.UploadOrder.References"];
      originAccessorials?: components["schemas"]["ITM.Shared.Functions.OrderProcessing.Common.Models.UploadOrder.OriginAccessorials"];
      destinationAccessorials?: components["schemas"]["ITM.Shared.Functions.OrderProcessing.Common.Models.UploadOrder.DestinationAccessorials"];
      originStop?: components["schemas"]["ITM.Shared.Functions.OrderProcessing.Common.Models.UploadOrder.OriginStop"];
      destinationStop?: components["schemas"]["ITM.Shared.Functions.OrderProcessing.Common.Models.UploadOrder.DestinationStop"];
      /** @description A non-optional array of objects that specifies the one or more handling units of different types with different commodities a order contains when an order is quoted or dispatched */
      quoteUnits?: components["schemas"]["ITM.Shared.Functions.OrderProcessing.Common.Models.UploadOrder.Unit"][];
    };
    "ITM.Shared.Functions.OrderProcessing.Common.Models.UploadOrder.OriginAccessorials": {
      /**
       * @description An optional string enumeration that specifies whether an order origin stop requires the carrier to perform an inside pickup when an order is quoted or dispatched
       * @default NO
       * @example No
       * @enum {string}
       */
      insidePickup:
        | "YES"
        | "NO"
        | "TRUE"
        | "FALSE"
        | "Y"
        | "N"
        | "T"
        | "F"
        | "1"
        | "0";
      /**
       * @description An optional string enumeration that specifies whether an order origin stop requires the carrier to perform an liftgate pickup when an order is quoted or dispatched
       * @default NO
       * @example No
       * @enum {string}
       */
      liftgatePickup:
        | "YES"
        | "NO"
        | "TRUE"
        | "FALSE"
        | "Y"
        | "N"
        | "T"
        | "F"
        | "1"
        | "0";
      /**
       * @description An optional string enumeration that specifies whether an order origin stop requires the carrier to protect the shipment from freezing when an order is quoted or dispatched
       * @default NO
       * @example Yes
       * @enum {string}
       */
      protectFromFreeze:
        | "YES"
        | "NO"
        | "TRUE"
        | "FALSE"
        | "Y"
        | "N"
        | "T"
        | "F"
        | "1"
        | "0";
      /**
       * @description An optional string enumeration that specifies whether an order origin stop requires the carrier to support a single shipment pickup when an order is quoted or dispatched
       * @default NO
       * @example No
       * @enum {string}
       */
      singleShipment:
        | "YES"
        | "NO"
        | "TRUE"
        | "FALSE"
        | "Y"
        | "N"
        | "T"
        | "F"
        | "1"
        | "0";
      /**
       * @description An optional string enumeration that specifies whether an order origin stop requires the carrier to support an in bond freight pickup when an order is quoted or dispatched
       * @default NO
       * @example No
       * @enum {string}
       */
      inBondFreight:
        | "YES"
        | "NO"
        | "TRUE"
        | "FALSE"
        | "Y"
        | "N"
        | "T"
        | "F"
        | "1"
        | "0";
    };
    "ITM.Shared.Functions.OrderProcessing.Common.Models.UploadOrder.OriginStop": {
      /**
       * @description An optional string to be used in the absence of a locationId value that specifies the name of the company at the origin stop
       * @example MyCarrier TMS
       */
      companyName?: string;
      /**
       * @description An optional string to be used in the absence of a locationId value that specifies the primary street address information at the origin stop
       * @example 598 Virginia Street
       */
      streetLine1?: string;
      /**
       * @description An optional string to be used in the absence of a locationId value that specifies the secondary street address information at the origin stop
       * @example Apartment 123
       */
      streetLine2?: string;
      /**
       * @description An optional string to be used in the absence of a locationId value that specifies the city at the origin stop
       * @example River Grove
       */
      city?: string;
      /**
       * @description Enum (USA): AL, AK, AZ, AR, CA, CO, CT, DE, FL, GA, HI, ID, IL, IN, IA, KS, KY, LA, ME, MD, MA, MI, MN, MS, MO, MT, NE, NV, NH, NJ, NM, NY, NC, ND, OH, OK, OR, PA, RI, SC, SD, TN, TX, UT, VT, VA, WA, WV, WI, WY.<br />Enum (CAN): AB, BC, MB, NB, NL, NS, NT, NU, ON, PE, QC, SK, YT.<br />An optional string to be used in the absence of a locationId value that specifies a two letter abbreviation of the State or Province at the origin stop
       * @example IL
       */
      state?: string;
      /**
       * @description An optional string to be used in the absence of a locationId value that specifies the Postal code at the origin stop
       * @example 60171
       */
      zip?: string;
      /**
       * @description Abbreviation of country (using ISO 3166 standards)
       * @default USA
       * @enum {string}
       */
      country: "USA" | "CAN";
      /**
       * @description An optional string to be used in the absence of a locationId value that specifies the type of location at the origin stop for identification of limited access locations
       * @default Business
       * @enum {string}
       */
      locationType:
        | "Business"
        | "Residential"
        | "Trade Show"
        | "Airport"
        | "Camp"
        | "Church"
        | "Construction Site"
        | "Country Club"
        | "Fair/Amusement/Park"
        | "Farm"
        | "Government Site"
        | "Grocery Warehouse"
        | "Hospital"
        | "Hotel"
        | "Limited Access"
        | "Military Installation"
        | "Mine Site"
        | "Native American Reservation"
        | "Nursing Home"
        | "Pier"
        | "Prison"
        | "Resort"
        | "School"
        | "Self-Storage"
        | "Utility Site";
      /**
       * @description An optional string to be used in the absence of a locationId value that specifies the first name of the origin stop contact. May be required for some shipments
       * @example Jane
       */
      contactFirstName?: string;
      /**
       * @description An optional string to be used in the absence of a locationId value that specifies the last name of the origin stop contact. May be required for some shipments
       * @example Wright
       */
      contactLastName?: string;
      /**
       * @description An optional string to be used in the absence of a locationId value that specifies the email address of the origin stop contact. May be required for some shipments
       * @example jane.wright@test.com
       */
      contactEmail?: string;
      /**
       * @description An optional non-formatted string to be used in the absence of a locationId value that specifies the telephone number of the origin stop contact. May be required for some shipments
       * @example (555) 555-1234
       */
      contactPhone?: string;
      /**
       * @description An optional numeric only string to be used in the absence of a locationId value that specifies the telephone extension of the origin stop contact if applicable
       * @example 30
       */
      ext?: string;
      /**
       * @description An optional formatted string to be used in the absence of a locationId value that specifies the time of day local to the origin stop that the origin stop is open to pickups in HH:mm AM or HH:mm PM format
       * @example 9:00 AM
       */
      readyTime?: string;
      /**
       * @description An optional formatted string to be used in the absence of a locationId value that specifies the time of day local to the origin stop that the origin stop is closed to pickups in HH:mm AM or HH:mm PM format
       * @example 4:00 PM
       */
      closeTime?: string;
      /**
       * @description An optional string to be used in the absence of a locationId value that specifies any additional instructions for pickup at the origin stop
       * @example Some instruction notes
       */
      instructions?: string;
      /**
       * @description An optional unique string identifier that can be used to specify a origin stop location that is already saved in the MyCarrier platform
       * @example My origin locationId
       */
      locationID?: string;
    };
    "ITM.Shared.Functions.OrderProcessing.Common.Models.UploadOrder.References": {
      /**
       * @description An optional string to specify a unique Bill of Lading number for an order when an order is dispatched
       * @example 456856
       */
      customerBOLNumber?: string;
      /**
       * @description An optional string to specify a unique PO number for an order when an order is dispatched
       * @example 145255
       */
      poNumber?: string;
      /**
       * @description An optional string to specify a unique reference number for an order when an order is dispatched
       * @example 75441454
       */
      referenceNumber?: string;
    };
    "ITM.Shared.Functions.OrderProcessing.Common.Models.UploadOrder.Unit": {
      /**
       * @description A non-optional string enumeration that specifies the type of handling unit the order will used when an order is quoted or dispatched
       * @default Pallet
       * @enum {string}
       */
      shippingUnitType:
        | "Bag"
        | "Bale"
        | "Box"
        | "Bucket"
        | "Bundle"
        | "Carton"
        | "Case"
        | "Crate"
        | "Cylinder"
        | "Drums"
        | "Pail"
        | "Pallet"
        | "Pieces"
        | "Reel"
        | "Roll"
        | "Skid"
        | "Tote"
        | "Tube";
      /**
       * @description A non-optional numeric string that specifies the number of handling units of the type, dimensions, and commodity(ies) specified in the shippingUnitType that will be used when an order is quoted or dispatched
       * @default 1
       * @example 2
       */
      shippingUnitCount: string;
      /**
       * @description An optional non-decimal numeric string that specifies the length of the handling unit using the units of measurement specified in the customerâ€™s default settings
       * @example 50
       */
      unitLength?: string;
      /**
       * @description An optional non-decimal numeric string that specifies the width of the handling unit using the units of measurement specified in the customerâ€™s default settings
       * @example 50
       */
      unitWidth?: string;
      /**
       * @description An optional non-decimal numeric string that specifies the height of the handling unit using the units of measurement specified in the customerâ€™s default settings
       * @example 50
       */
      unitHeight?: string;
      /**
       * @description An optional string that specifies if the handling units of the type, dimensions, and commodity(ies) specified in the shippingUnitType are stackable when an order is quoted or dispatched
       * @default NO
       * @example No
       * @enum {string}
       */
      unitStackable:
        | "YES"
        | "NO"
        | "TRUE"
        | "FALSE"
        | "Y"
        | "N"
        | "T"
        | "F"
        | "1"
        | "0";
      /** @description A non-optional array of objects that specifies the one or more commodities contained in a specific handling unit object */
      quoteCommodities?: components["schemas"]["ITM.Shared.Functions.OrderProcessing.Common.Models.UploadOrder.Commodity"][];
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
  UploadOrder: {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    requestBody?: {
      content: {
        "application/json": components["schemas"]["ITM.Shared.Functions.OrderProcessing.Common.Models.UploadOrder.DataModel"];
      };
    };
    responses: {
      /** @description Request was successfully added to the processing queue */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ITM.Shared.Functions.OrderProcessing.Common.Models.Results.Result"];
        };
      };
      /** @description Request has missing/invalid values */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ITM.Shared.Functions.OrderProcessing.Common.Models.Results.Result"];
        };
      };
      /** @description Unauthorized. The username or password provided is incorrect */
      401: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
  DeleteOrder: {
    parameters: {
      query?: never;
      header?: never;
      path: {
        /** @description Reference ID */
        referenceId: string;
      };
      cookie?: never;
    };
    requestBody?: never;
    responses: {
      /** @description Request was successfully added to the processing queue */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ITM.Shared.Functions.OrderProcessing.Common.Models.Results.Result"];
        };
      };
      /** @description Request has missing/invalid values */
      400: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          "application/json": components["schemas"]["ITM.Shared.Functions.OrderProcessing.Common.Models.Results.Result"];
        };
      };
      /** @description Unauthorized. The username or password provided is incorrect */
      401: {
        headers: {
          [name: string]: unknown;
        };
        content?: never;
      };
    };
  };
}
