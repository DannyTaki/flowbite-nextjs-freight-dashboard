/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/rates": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /**
     * Rate LTL shipment
     * @description Given a set of shipment attributes as input, Freightview will send back a list of rates.
     */
    post: {
      parameters: {
        query?: {
          /** @description Specify how long to wait for rates from all carriers. Use a timeout of `1` if you just want to create quote in Freightview. */
          timeout?: number;
          /** @description List of carrier SCACs to use to filter the returned array of rates. See [list of SCACs](#section/Carrier-Codes) */
          carriers?: string[];
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json":
            | components["schemas"]["Rates.LTL.RateOnlyRequest"]
            | components["schemas"]["Rates.LTL.RateToBookRequest"];
        };
      };
      responses: {
        /** @description The rates response echoes the elements that were included in the rate request, and also includes the shipment `id` and `rates` array. The `rates` array includes a rate object for each provider and service type combination. */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["Rates.LTL.Response"];
          };
        };
        400: components["responses"]["BadRequest"];
        401: components["responses"]["Unauthorized"];
        402: components["responses"]["PaymentRequired"];
        404: components["responses"]["NotFound"];
        429: components["responses"]["TooManyRatingRequests"];
        500: components["responses"]["ServerError"];
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/rates/parcel": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /** Rate Parcel shipment */
    post: {
      parameters: {
        query?: {
          /** @description Specify how long to wait for rates from all carriers. Use a timeout of `1` if you just want to create quote in Freightview */
          timeout?: number;
          /** @description List of carrier SCACs to use to filter the returned array of rates. See [list of SCACs](#section/Carrier-Codes) */
          carriers?: string[];
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json":
            | components["schemas"]["Rates.Parcel.RateOnlyRequest"]
            | components["schemas"]["Rates.Parcel.RateToBookRequest"];
        };
      };
      responses: {
        /** @description The rates response echoes the elements that were included in the rate request, and also includes the shipment `id` and `rates` array. The `rates` array includes a rate object for each provider and service type combination. */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["Rates.Parcel.Response"];
          };
        };
        400: components["responses"]["BadRequest"];
        401: components["responses"]["Unauthorized"];
        402: components["responses"]["PaymentRequired"];
        404: components["responses"]["NotFound"];
        429: components["responses"]["TooManyRatingRequests"];
        500: components["responses"]["ServerError"];
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/book": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /**
     * Book a shipment
     * @description Book a specific shipment using a specific rate, in order to get a BOL back and/or create a pickup request.
     */
    post: {
      parameters: {
        query?: {
          labelSize?: components["schemas"]["LabelSize"];
          labelCount?: 1 | 2 | 4;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody: components["requestBodies"]["Shared.Book.Request"];
      responses: {
        /** @description Successfully booked shipment. */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["Book.Shared.Response"];
          };
        };
        400: components["responses"]["BadRequest"];
        401: components["responses"]["Unauthorized"];
        402: components["responses"]["PaymentRequired"];
        /** @description Forbidden */
        403: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              /** @description Error message. */
              error?: string;
            };
          };
        };
        404: components["responses"]["NotFound"];
        429: components["responses"]["TooManyBookingRequests"];
        /** @description Error booking shipment. */
        500: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              /** @description Error message regarding why there was an error booking the shipment. */
              error?: string;
              /**
               * @description The type of error.
               * @example validation
               */
              errorType?: string;
            };
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/book/parcel/freightCollect": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    get?: never;
    put?: never;
    /**
     * Book parcel shipment (freight collect)
     * @description Book a parcel shipment, and bill the recipient or a third party account.
     *
     *     Note: Scheduling a pickup is not supported for parcel freight collect shipments.
     *
     */
    post: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody: {
        content: {
          "application/json": components["schemas"]["ParcelFreightCollectBookRequest"];
        };
      };
      responses: {
        /** @description Successfully booked shipment. */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["Book.Parcel.FreightCollect.Shipment"];
          };
        };
      };
    };
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/shipments": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Search for shipments
     * @deprecated
     * @description
     *     **This endpoint has been deprecated, as its [successor endpoint](v2#tag/Shipments/operation/shipmentsSearchShipments) is available in Freightview API 2.0.**
     *
     *     Search for shipment(s) in Freightview by:
     *       - PRO / tracking number
     *       - Freightview BOL number
     *       - Shipper Reference Number
     *       - PO Number
     *       - Pickup Date
     *       - Created Date
     *
     *     (You can search using more than one parameter to narrow your results, or use `pickupDate` to retrieve all the shipments scheduled for pickup on a given day, or `createdDate` to retrieve all shipments created on a given day).
     *
     */
    get: {
      parameters: {
        query?: {
          /** @description The PRO / tracking number for a shipment. */
          pro?: string;
          /** @description The Freightview generated BOL number for a shipment. */
          bol?: string;
          /** @description The shipper's reference number to search by. </br >
           *     (This is whatever value was specified in `originReferenceNumber` in the rate request).
           *      */
          ref?: string;
          /** @description The consignee's purchase order number of the shipment. </br >
           *     (This is whatever value was specified in `destReferenceNumber` in the rate request).
           *      */
          po?: string;
          /** @description The requested date for pickup of the shipments being searched for. */
          pickupDate?: string;
          /** @description The create date of the shipments being searched for. */
          createdDate?: string;
          /** @description Page number, for result sets that exceed 25 items. */
          page?: number;
        };
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["Search.SearchResults"];
          };
        };
        400: components["responses"]["BadRequest"];
        401: components["responses"]["Unauthorized"];
        402: components["responses"]["PaymentRequired"];
        404: components["responses"]["NotFound"];
        429: components["responses"]["TooManySearchRequests"];
        500: components["responses"]["ServerError"];
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/shipments/{id}": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Get shipment information
     * @deprecated
     * @description
     *     **This endpoint has been deprecated, as its [successor endpoint](v2#tag/Shipments/operation/shipmentsGetShipmentById) is available in Freightview API 2.0.**
     *
     *     Use this endpoint to retrieve shipment information, such as PRO number, shipment status & tracking history, documents (e.g. Bill of Lading, Proof of Delivery, Invoice) and original quote information (including charge breakdown).
     *
     *     > Note: The shipment info API only returns booked shipments; if the shipment is not in the correct status the endpoint will return a `404` status code.
     *
     *     This endpoint uses the unique `id` assigned to each shipment in Freightview. If you don't know the matching `id` for your shipment, you can search for it using the [search endpoint](#tag/Shipment/paths/~1shipments/get).
     *
     */
    get: {
      parameters: {
        query?: {
          labelSize?: components["schemas"]["LabelSize"];
          labelCount?: 1 | 2 | 4;
        };
        header?: never;
        path: {
          /** @description Unique shipment identifier */
          id: string;
        };
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": components["schemas"]["Shipment.Response"];
          };
        };
        400: components["responses"]["BadRequest"];
        401: components["responses"]["Unauthorized"];
        402: components["responses"]["PaymentRequired"];
        404: components["responses"]["NotFound"];
        500: components["responses"]["ServerError"];
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    /** @description This object shows required fields when the /rates endpoint will be used only for rating, and booking will happen within Freightview. */
    "Rates.LTL.RateOnlyRequest": components["schemas"]["Rates.LTL.Request"] &
      WithRequired<
        components["schemas"]["OriginLocation"],
        "originPostalCode"
      > &
      WithRequired<
        components["schemas"]["DestinationLocation"],
        "destPostalCode"
      > &
      components["schemas"]["BillToLocation"] &
      components["schemas"]["CustomsInfo"] &
      components["schemas"]["EmergencyInfo"] &
      WithRequired<components["schemas"]["LTLRateItems"], "items">;
    /** @description This object shows required fields when the /rates endpoint will be used in conjunction with the /book endpoint. */
    "Rates.LTL.RateToBookRequest": components["schemas"]["Rates.LTL.Request"] &
      WithRequired<
        components["schemas"]["OriginLocation"],
        | "originCompany"
        | "originAddress"
        | "originCity"
        | "originState"
        | "originPostalCode"
        | "originType"
        | "originContactName"
        | "originContactPhone"
        | "originDockHoursOpen"
        | "originDockHoursClose"
      > &
      WithRequired<
        components["schemas"]["DestinationLocation"],
        | "destCompany"
        | "destAddress"
        | "destCity"
        | "destState"
        | "destPostalCode"
        | "destType"
      > &
      components["schemas"]["BillToLocation"] &
      components["schemas"]["CustomsInfo"] &
      components["schemas"]["EmergencyInfo"] &
      WithRequired<components["schemas"]["LTLBookItems"], "items"> & {
        bolNum?: components["schemas"]["BOLNumber"];
      };
    /** @description This object shows required fields when the /rates endpoint will be used only for rating, and booking will happen within Freightview. */
    "Rates.Parcel.RateOnlyRequest": components["schemas"]["Rates.Parcel.Request"] & {
      /**
       * @description A flag that determines whether a pickup request is sent to the parcel carrier when the shipment is booked. If the origin location has a daily/recurring pickup with the carrier, set to `false`.
       * @default false
       */
      schedulePickup: boolean;
    } & WithRequired<
        components["schemas"]["ParcelOriginLocation"],
        "originPostalCode"
      > &
      WithRequired<
        components["schemas"]["ParcelDestinationLocation"],
        "destPostalCode"
      > &
      WithRequired<components["schemas"]["ParcelRateItems"], "items">;
    /** @description This object shows required fields when the /rates endpoint will be used in conjunction with the /book endpoint. */
    "Rates.Parcel.RateToBookRequest": components["schemas"]["Rates.Parcel.Request"] & {
      /**
       * @description A flag that determines whether a pickup request is sent to the parcel carrier when the shipment is booked. If the origin location has a daily/recurring pickup with the carrier, set to `false`.
       * @default false
       */
      schedulePickup: boolean;
    } & WithRequired<
        components["schemas"]["ParcelOriginLocation"],
        | "originCompany"
        | "originAddress"
        | "originCity"
        | "originState"
        | "originPostalCode"
        | "originContactName"
        | "originContactPhone"
        | "originDockHoursOpen"
        | "originDockHoursClose"
      > &
      WithRequired<
        components["schemas"]["ParcelDestinationLocation"],
        | "destCompany"
        | "destAddress"
        | "destCity"
        | "destState"
        | "destPostalCode"
        | "destContactName"
        | "destContactPhone"
        | "destContactEmail"
      > &
      WithRequired<components["schemas"]["ParcelBookItems"], "items">;
    /** @description The rate response includes the shipment details that were included in the rate request, along with an array of rate objects, one for each provider (carrier/broker) and service type combination. */
    "Rates.LTL.Response": {
      /** @description The unique identifier in Freightview for this shipment. */
      id?: string;
      rates?: components["schemas"]["Rates.LTL.Rate"][];
      links?: components["schemas"]["Rates.LTL.RateLinks"];
    };
    "Rates.LTL.Rate": components["schemas"]["Shared.LTL.Rate"] & {
      /** @description A unique identifier in Freightview for a specific rate. */
      id?: string;
      /**
       * @description Status code for this rate. Only status `ok` rates are valid.
       * @enum {string}
       */
      status?: "ok" | "error";
      /** @description Error message from carrier for this rate. Only present if `status` is `error`. */
      error?: string;
      /** @description A direct link to book the shipment with this rate within Freightview. */
      bookUrl?: string;
      /** @description A provider-specific reference number. Not all providers send this back. */
      ref?: string;
    };
    "Rates.Parcel.Rate": components["schemas"]["Shared.Shared.Rate"] & {
      /** @description A unique identifier in Freightview for a specific rate. */
      id?: string;
      /**
       * @description Status code for this rate. Only status `ok` rates are valid.
       * @enum {string}
       */
      status?: "ok" | "error";
      /** @description Error message from carrier for this rate. Only present if `status` is `error`. */
      error?: string;
      /** @description A direct link to book the shipment with this rate within Freightview. */
      bookUrl?: string;
    };
    "Shared.LTL.Rate": components["schemas"]["Shared.Shared.Rate"] & {
      /** @description A flag that indicates whether an interline carrier will be used to provide a portion of the shipment's transport. */
      interline?: boolean;
      /** @description A flag that indicates that the transit time is not exact and will be longer than the transit time in `days`. */
      daysPlus?: boolean;
      mode?: components["schemas"]["Mode"];
      paymentTerms?: components["schemas"]["PaymentTerms"];
      /** @description The name of the provider or freight broker that supplied this rate. _Only returned for freight broker rates._ */
      provider?: string;
      /** @description The 4-digit SCAC code of the provider or freight broker that supplied this rate. _Only returned for freight broker rates._ */
      providerCode?: string;
    };
    "Shared.Shared.Rate": {
      /**
       * Format: double
       * @description The total dollar amount of this rate, in USD. Includes freight charges, fuel and all additional charges.
       */
      total?: number;
      /** @description The number of transit days for this rate. */
      days?: number;
      /** @description The service type for this rate. */
      serviceType?: string;
      /** @description Delivery time of day for guaranteed or expedited rates, in 24 hour time. */
      serviceOption?: string;
      /** @description Description of the service. */
      serviceDescription?: string;
      /** @description A Freightview internal identifier for a specific carrier. */
      carrierId?: string;
      /** @description The name of the asset-based carrier that will actually move the shipment. */
      carrier?: string;
      /** @description The 4-digit SCAC code of the asset-based carrier that this rate would be moved under. See [list of SCACs](#section/Carrier-Codes) */
      carrierCode?: string;
      /** @description The provider rate response time in milliseconds. */
      time?: number;
      /** @description A flag that indicates the shipment includes a location that is considered rural by the carrier, and thus the transit time may not be consistent with the carrier's published transit times. */
      rural?: boolean;
      /** @description The breakdown of the various charges that make up the rate `total`. _Not supported by all providers._ */
      charges?: components["schemas"]["Shared.Shared.Charge"][];
    };
    "Book.Parcel.FreightCollect.Rate": {
      /**
       * Format: double
       * @description Will be zero since freight charges are billed to recipient or third party.
       */
      total?: number;
      /** @description The service type for this rate. */
      serviceType?: string;
      /** @description Delivery time of day for guaranteed or expedited rates, in 24 hour time. */
      serviceOption?: string;
      /** @description Description of the service. */
      serviceDescription?: string;
      /** @description A Freightview internal identifier for a specific carrier. */
      carrierId?: string;
      /** @description The name of the carrier that is transporting the shipment. */
      carrier?: string;
      /** @description The SCAC of the carrier that is transporting the shipment. */
      carrierCode?: string;
      /**
       * Format: date-time
       * @description The date/time this rate was provided.
       */
      createdDate?: string;
      /** @description The mode of transit this shipment will use. */
      mode?: string;
    };
    "Shared.Shared.Charge": {
      /** @description The short name of the charge (e.g. `linehaul`, `fuel`, `discount`). */
      name?: string;
      /**
       * Format: double
       * @description The dollar amount of this specific charge.
       */
      amount?: number;
      /** @description The rate provider's description of the charge. _Not supported by all providers._ */
      providerDetail?: string;
      /** @description The rate provider's accessorial code. _Not supported by all providers._ */
      code?: string;
    };
    /** @description Links to various webpages inside Freightview. */
    "Rates.LTL.RateLinks": {
      /** @description A direct link to access all of the rate results for this shipment within Freightview. */
      ratesUrl?: string;
      /** @description A direct link to start a spot quote for this shipment within Freightview. */
      spotUrl?: string;
    };
    /** @description Links to various webpages inside Freightview. */
    "Rates.Parcel.RateLinks": {
      /** @description A direct link to access all of the rate results for this shipment within Freightview. */
      ratesUrl?: string;
    };
    "Book.LTL.Rate": components["schemas"]["Shared.LTL.Rate"] & {
      /**
       * Format: date-time
       * @description The date/time this rate was provided.
       */
      createdDate?: string;
      /** @description The mode of transit this shipment will use. */
      mode?: string;
      /** @description The quote number provided by the carrier or provider for this rate. */
      quoteNum?: string;
    };
    "Book.Parcel.Rate": components["schemas"]["Shared.Shared.Rate"] & {
      /**
       * Format: date-time
       * @description The date/time this rate was provided.
       */
      createdDate?: string;
      /** @description The mode of transit this shipment will use. */
      mode?: string;
    };
    LTLBookItems: {
      /** @description Array of handling units that make up the shipment. Each `items` object can have a `pieces` value minimum of 1 and maximum of 500. Think of each `items` object as a group of handling units that all share the same characteristics. (e.g. same `freightClass`, `length`, `width`, and `height`). */
      items?: components["schemas"]["LTLBookItem"][];
    };
    "Rates.LTL.Request": {
      /**
       * Format: date
       * @description Pickup date for this rate request. If pickup date is omitted or falls on a non-shipping day, the pickup date will be the next available shipping day.
       */
      pickupDate?: string;
      /** @description An array of strings for additional charges. See [list of accessorials](#section/Accessorials) */
      charges?: components["schemas"]["LTLAccessorial"][];
    };
    LTLRateItems: {
      /** @description Array of handling units that make up the shipment. Each `items` object can have a `pieces` value minimum of 1 and maximum of 500. Think of each `items` object as a group of handling units that all share the same characteristics. (e.g. same `freightClass`, `length`, `width`, and `height`).
       *     * Item dimensions are optional, however many freight brokers and carriers do not provide their best LTL rates without dimensions. For the best rates, enter dimensions.
       *      */
      items?: components["schemas"]["LTLRateItem"][];
    };
    ParcelRateItems: {
      /** @description Each parcel package must be a separate object in the `items` array. */
      items?: components["schemas"]["ParcelRateItem"][];
    };
    ParcelBookItems: {
      /** @description Each parcel package must be a separate object in the `items` array. */
      items?: components["schemas"]["ParcelBookItem"][];
    };
    "Rates.Parcel.Request": {
      /**
       * Format: date
       * @description Pickup date for this rate request. If pickup date is omitted or falls on a non-shipping day, the pickup date will be the next available shipping day.
       */
      pickupDate?: string;
      /** @description An array of strings for additional charges. See [list of accessorials](#section/Accessorials)
       *      */
      charges?: components["schemas"]["ParcelAccessorial"][];
    };
    /** @description The rate response includes the shipment details that were included in the rate request, along with an array of rate objects, one for each provider (carrier/broker) and service type combination. */
    "Rates.Parcel.Response": {
      /** @description The unique identifier in Freightview for this shipment. */
      id?: string;
      rates?: components["schemas"]["Rates.Parcel.Rate"][];
      links?: components["schemas"]["Rates.Parcel.RateLinks"];
    };
    "Book.Shared.Response":
      | components["schemas"]["Shared.LTL.Shipment"]
      | components["schemas"]["Shared.Parcel.Shipment"];
    "Shipment.Response":
      | components["schemas"]["Shared.LTL.Shipment"]
      | components["schemas"]["Shared.Parcel.Shipment"];
    "Search.SearchResults": {
      /** @description An array of shipment objects that match the query parameters. */
      shipments?: (
        | components["schemas"]["Shared.LTL.Shipment"]
        | components["schemas"]["Shared.Parcel.Shipment"]
      )[];
      /** @description An object with links to the previous and next pages of search results, for result sets that exceed 25 shipments. */
      link?: {
        /** @description API URL to get the previous page of results. */
        previous?: string;
        /** @description API url to get the next page of results. */
        next?: string;
      };
      /** @description Total number of shipments that match the query parameters. */
      total?: number;
      /** @description Current page of shipment search results returned. */
      page?: number;
    };
    "Shared.LTL.Shipment": components["schemas"]["Shared.Shared.Shipment"] & {
      bolNum?: components["schemas"]["BOLNumber"];
      paymentTerms?: components["schemas"]["PaymentTerms"];
      items?: components["schemas"]["LTLItem"][];
      rate?: components["schemas"]["Book.LTL.Rate"];
      dispatch?: components["schemas"]["Shared.LTL.Dispatch"];
    };
    "Shared.Parcel.Shipment": {
      /** @description The unique identifier in Freightview for this shipment. */
      id?: string;
      /**
       * Format: date-time
       * @description Date and time the shipment was created in Freightview.
       */
      createdDate?: string;
      /**
       * @description Only `true` if the shipment has been archived in Freightview.
       * @default false
       */
      archived: boolean;
      /**
       * @description The direction the shipment is going based on your account locations.
       * @enum {string}
       */
      direction?: "outbound" | "inbound" | "third-party";
      /**
       * Format: date-time
       * @description The requested date for pickup of the shipment.
       */
      pickupDate?: string;
      /** @description The current shipment status within Freightview. */
      status?: string;
      billTo?: components["schemas"]["BillTo"];
      /** @description An array of the accessorial codes rated on this shipment. */
      accessorials?: string[];
      origin?: components["schemas"]["Shared.Parcel.Location"];
      destination?: components["schemas"]["Shared.Parcel.Location"];
      tracking?: components["schemas"]["Shared.Shared.Tracking"];
      /** @description An array of files available for the shipment. See [details on file types / subtypes](#section/File-Types). */
      files?: components["schemas"]["File"][];
      invoice?: components["schemas"]["Invoice"];
      /** @description The Freightview user account that quoted this shipment. */
      quotedBy?: string;
      /** @description The Freightview user account that booked this shipment. */
      bookedBy?: string;
    } & {
      items?: components["schemas"]["ParcelItem"][];
      rate?: components["schemas"]["Book.Parcel.Rate"];
      dispatch?: components["schemas"]["Shared.Parcel.Dispatch"];
    };
    ParcelFreightCollectBookRequest: {
      /**
       * @description The carrier code to use when creating the shipment.
       *       - `fxfe` - FedEx
       *       - `upgf` - UPS
       *
       *     Note: Shipper must have carrier setup for parcel in their Freightview account to book parcel freight collect shipments.
       *
       * @enum {string}
       */
      carrierCode: "fxfe" | "upgf";
      /**
       * @description The service to use when creating the shipment. See [list of valid services per carrier](#section/Service-Identifiers).
       *
       *     Note: For FedEx Home Delivery®, in addition to a `serviceId` of `home_delivery`, `destType` must be `residential`, and `residential delivery` must be included in the `charges` array.
       *
       * @enum {string}
       */
      serviceId:
        | "ground"
        | "home_delivery"
        | "first_overnight"
        | "priority_overnight"
        | "standard_overnight"
        | "two_day_am"
        | "two_day"
        | "express_saver"
        | "next_day"
        | "next_day_saver"
        | "next_day_early"
        | "second_day"
        | "second_day_am"
        | "three_day_select";
      /**
       * @description The bill-to account type.
       *     - If the recipient's account is being billed, use `recipient`.
       *     - If a third party's account is being billed, use `third_party`.
       *
       * @enum {string}
       */
      billToType: "recipient" | "third_party";
      /** @description The account number to which the shipment charges should be billed.
       *     - UPS account numbers typically have 6 digits.
       *     - FedEx account numbers have 9 digits.
       *      */
      accountNumber: string;
      /** @description The billing postal code associated with the `accountNumber`. */
      billingZipCode: string;
    } & {
      /** @description An array of strings for additional charges.
       *
       *     #### Signature Options
       *     Specify only one signature option per shipment.
       *
       *     Note : `indirect signature required` is only supported by FedEx, and only for `residential` destinations.
       *
       *     #### Residential Delivery
       *     For shipments to residential locations, use charge `residential delivery`. Also ensure `destType` is `residential`, and for FedEx, ensure `serviceId` is `home_delivery`.
       *      */
      charges?: (
        | "no signature"
        | "signature required"
        | "adult signature required"
        | "indirect signature required"
        | "residential delivery"
      )[];
      /**
       * Format: date
       * @description Pickup date for the shipment.
       */
      pickupDate?: string;
    } & WithRequired<components["schemas"]["ParcelRateItems"], "items"> &
      WithRequired<
        components["schemas"]["ParcelOriginLocation"],
        | "originCompany"
        | "originAddress"
        | "originCity"
        | "originState"
        | "originPostalCode"
        | "originContactName"
        | "originContactPhone"
        | "originDockHoursOpen"
        | "originDockHoursClose"
      > &
      WithRequired<
        components["schemas"]["ParcelDestinationLocation"],
        | "destCompany"
        | "destAddress"
        | "destCity"
        | "destState"
        | "destPostalCode"
        | "destContactName"
        | "destContactPhone"
        | "destContactEmail"
      >;
    "Book.Parcel.FreightCollect.Shipment": {
      dispatch?: components["schemas"]["Book.Parcel.FreightCollect.Dispatch"];
    } & {
      /** @description The unique identifier in Freightview for this shipment. */
      id?: string;
      /**
       * Format: date-time
       * @description Date and time the shipment was created in Freightview.
       */
      createdDate?: string;
      /**
       * @description Only `true` if the shipment has been archived in Freightview.
       * @default false
       */
      archived: boolean;
      /**
       * @description The direction the shipment is going based on your account locations.
       * @enum {string}
       */
      direction?: "outbound" | "inbound" | "third-party";
      /**
       * Format: date-time
       * @description The requested date for pickup of the shipment.
       */
      pickupDate?: string;
      /** @description The current shipment status within Freightview. */
      status?: string;
      /** @description An array of the accessorial codes rated on this shipment. */
      accessorials?: string[];
      origin?: components["schemas"]["Shared.Parcel.Location"];
      destination?: components["schemas"]["Shared.Parcel.Location"];
      tracking?: components["schemas"]["Shared.Shared.Tracking"];
      /** @description An array of files available for the shipment. See [details on file types / subtypes](#section/File-Types). */
      files?: components["schemas"]["File"][];
      invoice?: components["schemas"]["Invoice"];
      /** @description The Freightview user account that quoted this shipment. */
      quotedBy?: string;
      /** @description The Freightview user account that booked this shipment. */
      bookedBy?: string;
    } & {
      items?: components["schemas"]["ParcelItem"][];
      rate?: components["schemas"]["Book.Parcel.Rate"];
    };
    "Shared.Shared.Shipment": {
      /** @description The unique identifier in Freightview for this shipment. */
      id?: string;
      /**
       * Format: date-time
       * @description Date and time the shipment was created in Freightview.
       */
      createdDate?: string;
      /**
       * @description Only `true` if the shipment has been archived in Freightview.
       * @default false
       */
      archived: boolean;
      /**
       * @description The direction the shipment is going based on your account locations.
       * @enum {string}
       */
      direction?: "outbound" | "inbound" | "third-party";
      /**
       * Format: date-time
       * @description The requested date for pickup of the shipment.
       */
      pickupDate?: string;
      /** @description The current shipment status within Freightview. */
      status?: string;
      billTo?: components["schemas"]["BillTo"];
      /** @description An array of the accessorial codes rated on this shipment. */
      accessorials?: string[];
      origin?: components["schemas"]["Shared.Shared.Location"];
      destination?: components["schemas"]["Shared.Shared.Location"];
      tracking?: components["schemas"]["Shared.Shared.Tracking"];
      /** @description An array of files available for the shipment. See [details on file types / subtypes](#section/File-Types). */
      files?: components["schemas"]["File"][];
      invoice?: components["schemas"]["Invoice"];
      /** @description An array of the email addresses with which the shipment was shared. */
      shareShipmentEmails?: string[];
      /** @description The Freightview user account that quoted this shipment. */
      quotedBy?: string;
      /** @description The Freightview user account that booked this shipment. */
      bookedBy?: string;
    };
    "Shared.Shared.DispatchItem": {
      /** @description The identifier of the item in Freightview. */
      itemId?: string;
      /** @description The zero-based index of the individual item for the given group of items specified by the itemId. */
      index?: number;
      /** @description Tracking number for this item and index of the shipment. */
      trackingNum?: string;
    };
    "Shared.Shared.Dispatch": {
      /** @description A Freightview internal identifier of the asset-based carrier, provider or freight broker that is handling moving this shipment. */
      carrierId?: string;
      /** @description The name of the asset-based carrier that will actually move the shipment. */
      carrier?: string;
      /** @description The 4-digit SCAC code of the asset-based carrier that will actually move the shipment. See [list of SCACs](#section/Carrier-Codes) */
      carrierCode?: string;
      /** @description Indicator for whether a pickup for the shipment was scheduled with the carrier within Freightview. */
      schedulePickup?: boolean;
      /**
       * @description Indicates the status of the BOL creation.
       * @enum {string}
       */
      bolStatus?: "ok" | "pending" | "error";
      /** @description Pickup number provided by the asset-based carrier moving the shipment.
       *     _(Not present if `schedulePickup` was `false`)_
       *      */
      pickupNum?: string;
      /** @description Item information provided by the asset-based carrier moving the shipment. */
      items?: components["schemas"]["Shared.Shared.DispatchItem"][];
    };
    "Shared.LTL.Dispatch": components["schemas"]["Shared.Shared.Dispatch"] & {
      /** @description Pro number for tracking the shipment. */
      proNum?: string;
    };
    "Shared.Parcel.Dispatch": components["schemas"]["Shared.Shared.Dispatch"] & {
      /** @description Tracking number for the shipment. */
      trackingNum?: string;
    };
    /** @description The results from dispatching the shipment. */
    "Book.Parcel.FreightCollect.Dispatch": {
      /** @description A Freightview internal identifier of the carrier that is moving this shipment. */
      carrierId?: string;
      /** @description The name of the carrier moving the shipment. */
      carrier?: string;
      /**
       * @description The carrier code used when creating the shipment.
       *       - `fxfe` - FedEx
       *       - `upgf` - UPS
       *
       * @enum {string}
       */
      carrierCode?: "fxfe" | "upgf";
      /**
       * @description Indicates the status of the label creation.
       * @enum {string}
       */
      bolStatus?: "ok" | "pending" | "error";
      /** @description Tracking number for the shipment. */
      trackingNum?: string;
      /** @description Item information provided by the asset-based carrier moving the shipment. */
      items?: components["schemas"]["Shared.Shared.DispatchItem"][];
    };
    "Shared.Shared.Location": {
      /** @description Company name for the location. */
      company?: string;
      /** @description Address for the location. */
      address?: string;
      /** @description Address line 2 for the location. */
      address2?: string;
      /** @description City for the location. */
      city?: string;
      /** @description Two character state abbreviation for the location. */
      state?: string;
      /** @description Postal code of the location. */
      postalCode?: string;
      /**
       * @description Two character country code for the location.
       * @enum {string}
       */
      country?: "US" | "CA";
      shipType?: components["schemas"]["LocationType"];
      /** @description Name of a contact person at the location. */
      contactName?: string;
      /** @description Phone number for the contact at the location. */
      contactPhone?: string;
      /**
       * Format: email
       * @description Email for the contact at the location.
       */
      contactEmail?: string;
      /** @description Reference number for the location */
      referenceNumber?: string;
      /** @description Special instructions for the location. */
      instructions?: string;
      /** @description The time the location will open in 12-hour format. */
      dockHoursOpen?: string;
      /** @description The time the location will close in 12-hour format. */
      dockHoursClose?: string;
    };
    /** @description Details of a location. */
    "Shared.Parcel.Location": {
      /** @description Company name for the location. */
      company?: string;
      /** @description Address for the location. */
      address?: string;
      /** @description Address line 2 for the location. */
      address2?: string;
      /** @description City for the location. */
      city?: string;
      /** @description Two character state abbreviation for the location. */
      state?: string;
      /** @description Postal code of the location. */
      postalCode?: string;
      /**
       * @description Two character country code for the location.
       * @enum {string}
       */
      country?: "US" | "CA";
      /** @description Name of a contact person at the location. */
      contactName?: string;
      /** @description Phone number for the contact at the location. */
      contactPhone?: string;
      /**
       * Format: email
       * @description Email for the contact at the location.
       */
      contactEmail?: string;
      /** @description Reference number for the location */
      referenceNumber?: string;
      /** @description The time the location will open in 12-hour format. */
      dockHoursOpen?: string;
      /** @description The time the location will close in 12-hour format. */
      dockHoursClose?: string;
      /**
       * @description For parcel, a location is assumed to be a business, unless this field is set to `residential`.
       * @enum {string}
       */
      shipType?: "business dock" | "residential";
    };
    /** @description Object containing tracking information. */
    "Shared.Shared.Tracking": {
      /**
       * @description The current tracking status of the shipment.
       *     * `pending` - shipment is waiting to be picked up
       *     * `in transit` - shipment is in transit
       *     * `delivered` - shipment has been delivered
       *     * `failed` - shipment was unable to be tracked using the PRO / tracking number.
       *
       * @enum {string}
       */
      status?: "pending" | "in transit" | "delivered" | "failed";
      /** @description The current tracking summary */
      summary?: string;
      /**
       * Format: date-time
       * @description The last time the tracking status changed
       */
      lastUpdatedDate?: string;
      /**
       * Format: date-time
       * @description The actual pickup date of the shipment, if returned by the carrier.
       */
      pickupDateActual?: string;
      /**
       * Format: date-time
       * @description The estimated delivery date, if returned by the carrier.
       */
      deliveryDateEstimate?: string;
      /**
       * Format: date-time
       * @description The actual delivery date, if returned by the carrier.
       */
      deliveryDateActual?: string;
      /** @description The shipment's entire tracking history. */
      history?: {
        status?: components["schemas"]["TrackingStatus"];
        /** @description Tracking summary for the tracking update. */
        summary?: string;
        /**
         * Format: date-time
         * @description Time the tracking update was created.
         */
        createdDate?: string;
      }[];
    };
    /** @enum {string} */
    TrackingStatus: "pending" | "in transit" | "delivered" | "failed";
    File: {
      type?: components["schemas"]["FileTypes"];
      /**
       * @description The source of the file.
       * @enum {string}
       */
      subtype?: "freightview" | "carrier" | "shipper";
      mimeType?: components["schemas"]["MimeTypes"];
      /**
       * Format: date-time
       * @description Date and time the file was uploaded.
       */
      uploadDate?: string;
      /** @description A link to the file. */
      url?: string;
    };
    /**
     * @description The type of file
     * @enum {string}
     */
    FileTypes:
      | "quote"
      | "customer-quote"
      | "bol"
      | "label"
      | "label-combined"
      | "signed bol"
      | "proof of delivery"
      | "invoice";
    /**
     * @description The mime type of the file. Files will be of mime type `application/pdf` with the exception of parcel labels which can either be `application/pdf` or `application/zpl`. The preferred parcel label type can be adjusted within your Freightview account settings.
     * @enum {string}
     */
    MimeTypes:
      | "application/pdf"
      | "application/zpl"
      | "image/jpeg"
      | "image/png";
    /** @description An object with details of the invoice for the shipment. This object won't have data until the invoice details are entered by a user via Freightview's Audit functionality. */
    Invoice: {
      /**
       * Format: date-time
       * @description Day & time the invoice details were created in Freightview.
       */
      createdDate?: string;
      /**
       * Format: double
       * @description The amount that was invoiced by the carrier.
       */
      invoiceAmount?: number;
      /** @description The carrier invoice number. */
      invoiceNumber?: string;
      /**
       * Format: double
       * @description The amount of the discrepancy between the invoiced rate and the quoted rate in Freightview.
       */
      disputedAmount?: number;
      payments?: {
        /**
         * Format: double
         * @description The amount of the payment.
         * @example 100.45
         */
        amount?: number;
        /** @description A flag to indicate to indicate that this amount has been exported out of the Audit tool (e.g. to an accounting group for payment to carrier). */
        remitted?: boolean;
      }[];
    };
    /**
     * @description The size of labels you would like to generate for the shipment.
     *
     *     **N/A for parcel shipments**, which default to `4x6`.
     *
     * @default 4x6
     * @enum {string}
     */
    LabelSize:
      | "2.25x4"
      | "3x4"
      | "3x5"
      | "3.5x5"
      | "4x1"
      | "4x2"
      | "4x3.3"
      | "4x6"
      | "4x8"
      | "5.5x8.5"
      | "8.5x11";
    OriginLocation: {
      /** @description Company name for the pickup location. */
      originCompany?: string;
      /** @description Address for the pickup location. */
      originAddress?: string;
      /** @description Address line 2 for the pickup location. */
      originAddress2?: string;
      /** @description City for the pickup location. */
      originCity?: string;
      /** @description Two character state abbreviation for the pickup location. */
      originState?: string;
      /** @description Postal code of the shipment's origin location. */
      originPostalCode?: string;
      originCountry?: components["schemas"]["CountryList"];
      originType?: components["schemas"]["LocationType"];
      /** @description Name of a contact person at the pickup location. */
      originContactName?: string;
      /**
       * @description Phone number for the contact at the pickup location.
       * @example (555) 555-5555
       */
      originContactPhone?: string;
      /**
       * Format: email
       * @description Email for the contact at the pickup location. _(Required by some carriers for booking)_
       */
      originContactEmail?: string;
      /** @description Reference numbers for the origin. (e.g. Order number) */
      originReferenceNumber?: string;
      /** @description Special instructions at the pickup location. */
      originInstructions?: string;
      /**
       * @description The time the origin location will be open for pickups in 12-hour format. Format **(9:00 AM)**
       * @example 9:00 AM
       */
      originDockHoursOpen?: string;
      /**
       * @description The time the origin location will close for pickups in 12-hour format. Format **(5:00 PM)**
       * @example 5:00 PM
       */
      originDockHoursClose?: string;
    };
    DestinationLocation: {
      /** @description Company name for the delivery location. */
      destCompany?: string;
      /** @description Address for the delivery location. */
      destAddress?: string;
      /** @description Address line 2 for the delivery location. */
      destAddress2?: string;
      /** @description City for the delivery location. */
      destCity?: string;
      /** @description Two character state abbreviation for the delivery location. */
      destState?: string;
      /** @description Postal code of the shipment's destination location. */
      destPostalCode?: string;
      destCountry?: components["schemas"]["CountryList"];
      destType?: components["schemas"]["LocationType"];
      /** @description Name of a contact person at the delivery location. */
      destContactName?: string;
      /**
       * @description Phone number for the contact at the delivery location.
       * @example (555) 555-5555
       */
      destContactPhone?: string;
      /**
       * Format: email
       * @description Email for the contact at the delivery location.
       */
      destContactEmail?: string;
      /** @description Reference numbers for the delivery location. (e.g. PO number) */
      destReferenceNumber?: string;
      /** @description Special instructions for delivery. */
      destInstructions?: string;
      /**
       * @description The time the destination location will be open for deliveries in 12-hour format. Format **(9:00 AM)**
       * @example 9:00 AM
       */
      destDockHoursOpen?: string;
      /**
       * @description The time the destination location will stop accepting deliveries in 12-hour format. Format **(5:00 PM)**
       * @example 5:00 PM
       */
      destDockHoursClose?: string;
    };
    ParcelOriginLocation: {
      /** @description Company name for the pickup location. */
      originCompany?: string;
      /** @description Address for the pickup location. */
      originAddress?: string;
      /** @description Address line 2 for the pickup location. */
      originAddress2?: string;
      /** @description City for the pickup location. */
      originCity?: string;
      /** @description Two character state abbreviation for the pickup location. */
      originState?: string;
      /** @description Postal code of the shipment's origin location. */
      originPostalCode?: string;
      /**
       * @description Three digit country code for the location.
       * @default USA
       * @enum {string}
       */
      originCountry: "USA";
      /**
       * @description For parcel, a location is assumed to be a business, unless this field is set to `residential`.
       * @enum {string}
       */
      originType?: "business dock" | "residential";
      /** @description Name of a contact person at the pickup location. */
      originContactName?: string;
      /**
       * @description Phone number for the contact at the pickup location.
       * @example (555) 555-5555
       */
      originContactPhone?: string;
      /** @description Reference numbers for the origin. (e.g. Order number) */
      originReferenceNumber?: string;
      /**
       * @description The time the origin location will be open for pickups in 12-hour format. Format **(9:00 AM)**
       * @example 9:00 AM
       */
      originDockHoursOpen?: string;
      /**
       * @description The time the origin location will close for pickups in 12-hour format. Format **(5:00 PM)**
       * @example 5:00 PM
       */
      originDockHoursClose?: string;
    };
    ParcelDestinationLocation: {
      /** @description Company name for the delivery location. */
      destCompany?: string;
      /** @description Address for the delivery location. */
      destAddress?: string;
      /** @description Address line 2 for the delivery location. */
      destAddress2?: string;
      /** @description City for the delivery location. */
      destCity?: string;
      /** @description Two character state abbreviation for the delivery location. */
      destState?: string;
      /** @description Postal code of the shipment's destination location. */
      destPostalCode?: string;
      /**
       * @description Three digit country code for the location.
       * @default USA
       * @enum {string}
       */
      destCountry: "USA";
      /**
       * @description For parcel, a location is assumed to be a business, unless this field is set to `residential`.
       * @enum {string}
       */
      destType?: "business dock" | "residential";
      /** @description Name of a contact person at the delivery location. */
      destContactName?: string;
      /**
       * @description Phone number for the contact at the delivery location.
       * @example (555) 555-5555
       */
      destContactPhone?: string;
      /**
       * Format: email
       * @description Email for the contact at the delivery location.
       */
      destContactEmail?: string;
      /** @description Reference numbers for the delivery location. (e.g. PO number) */
      destReferenceNumber?: string;
    };
    BillToLocation: {
      /** @description Postal code for the billing party. Only used for third party rates. */
      billPostalCode?: string;
      billCountry?: components["schemas"]["CountryList"];
    };
    /** @description Object to specify customs broker information for cross-border shipments. */
    CustomsInfo: {
      customsBroker?: {
        /** @description The customs broker company name. </br >
         *     _Required if customsBroker information is specified._
         *      */
        companyName: string;
        /** @description Address line for the customs broker. </br >
         *     _Required by some carriers._
         *      */
        address?: string;
        /** @description Address line 2 for the customs broker. */
        address2?: string;
        /** @description City for the customs broker. </br >
         *     _Required by some carriers._
         *      */
        city?: string;
        /** @description State for the customs broker. </br >
         *     _Required by some carriers._
         *      */
        state?: string;
        /** @description Postal code for the customs broker. </br >
         *     _Required by some carriers._
         *      */
        postalCode?: string;
        /**
         * @description Country for the customs broker. </br >
         *     _Required by some carriers._
         *
         * @enum {string}
         */
        country?: "USA" | "CAN";
        /** @description The phone number of the customs broker. </br >
         *     _Required if customsBroker information is specified._
         *      */
        phone: string;
        /**
         * Format: email
         * @description The email address of the customs broker.
         */
        email?: string;
        /**
         * Format: double
         * @description The declared value of the shipments for customs. </br >
         *     _Required by some carriers._
         *
         */
        declaredValue?: number;
        /**
         * @description The role of the customs broker. </br >
         *     _Required by some carriers._
         *
         * @enum {string}
         */
        type?: "import" | "export";
      };
    };
    EmergencyInfo: {
      /** @description Emergency contact name. _Required if any items on the shipment are hazardous._ */
      emergencyName?: string;
      /**
       * @description Emergency contact phone number. _Required if any items on the shipment are hazardous._
       * @example (555) 555-5555
       */
      emergencyPhone?: string;
    };
    /**
     * @description Three digit country code for the location.
     * @default USA
     * @enum {string}
     */
    CountryList: "USA" | "CAN";
    /**
     * @description Transportation mode.
     * @enum {string}
     */
    Mode:
      | "Air"
      | "Bulk"
      | "Consolidated"
      | "Flatbed"
      | "Intermodal"
      | "LTL"
      | "Truckload";
    /**
     * @description Payment terms used for this rate.
     * @enum {string}
     */
    PaymentTerms:
      | "Outbound Prepaid"
      | "Outbound Collect"
      | "Inbound Collect"
      | "Third Party Prepaid"
      | "Third Party Collect";
    /** @description Object with bill-to information for the shipment. */
    BillTo: {
      /** @description Company name for the billing party. */
      company?: string;
      /** @description Address for the billing party. */
      address?: string;
      /** @description Address line 2 for the billing party. */
      address2?: string;
      /** @description City for the billing party. */
      city?: string;
      /** @description Two character state abbreviation for the billing party. */
      state?: string;
      /** @description Postal code for the billing party. */
      postalCode?: string;
      /**
       * @description Two character country code for the billing party.
       * @enum {string}
       */
      country?: "US" | "CA";
      /** @description Contact name for the billing party. */
      contactName?: string;
      /**
       * Format: email
       * @description Email address for the billing party.
       */
      contactEmail?: string;
      /** @description Phone number for the billing party. */
      contactPhone?: string;
    };
    LTLRateItem: components["schemas"]["LTLItem"] & Record<string, never>;
    LTLBookItem: components["schemas"]["LTLItem"] & Record<string, never>;
    ParcelRateItem: components["schemas"]["ParcelItem"] & Record<string, never>;
    ParcelBookItem: components["schemas"]["ParcelItem"] & Record<string, never>;
    /** @description Item for LTL shipment. */
    LTLItem: {
      /** @description The unique identifier in Freightview for this item. */
      readonly itemId?: string;
      /**
       * @description Description of the item.
       * @example Widgets
       */
      description?: string;
      /**
       * Format: int32
       * @description Total weight of this item in pounds.
       */
      weight?: number;
      freightClass?: components["schemas"]["FreightClass"];
      /**
       * Format: int32
       * @description Length of this item in inches.
       */
      length?: number;
      /**
       * Format: int32
       * @description Width of this item in inches.
       */
      width?: number;
      /**
       * Format: int32
       * @description Height of this item in inches.
       */
      height?: number;
      package?: components["schemas"]["LTLPackagingType"];
      /**
       * Format: int32
       * @description Count of `package` in this `item`. (e.g. `2` for 2 pallets in this handling unit group)
       * @default 1
       */
      pieces: number;
      /**
       * @description NMFC code for the item. _(Required by some carriers for more accurate rating)._
       * @example 123456-02
       */
      nmfc?: string;
      /** @description Hazardous materials flag. `true` indicates the item is hazardous. */
      hazardous?: boolean;
      hazard?: components["schemas"]["HazardousMaterial"];
      /**
       * Format: int32
       * @description The number of things an item contains.
       */
      saidToContain?: number;
      saidToContainPackagingType?:
        | components["schemas"]["SaidToContainOptions"]
        | components["schemas"]["FluidSaidToContainOptions"];
      /** @description Indicates the item is stackable. */
      stackable?: boolean;
    };
    /** @enum {string} */
    LTLAccessorial:
      | "arrival notice"
      | "arrival schedule"
      | "liftgate pickup"
      | "liftgate delivery"
      | "inside pickup"
      | "inside delivery"
      | "sort and segregate"
      | "protect from freezing";
    /** @enum {string} */
    ParcelAccessorial:
      | "signature required"
      | "adult signature required"
      | "indirect signature required";
    /** @description Item for parcel shipment. */
    ParcelItem: {
      /** @description The unique identifier in Freightview for this item. */
      readonly itemId?: string;
      /**
       * @description Description of the item.
       * @example Widgets
       */
      description?: string;
      /**
       * Format: int32
       * @description Total weight of this item in pounds.
       */
      weight?: number;
      /**
       * Format: int32
       * @description Length of this item in inches.
       */
      length?: number;
      /**
       * Format: int32
       * @description Width of this item in inches.
       */
      width?: number;
      /**
       * Format: int32
       * @description Height of this item in inches.
       */
      height?: number;
      package?: components["schemas"]["ParcelPackagingType"];
      /** @description Indicates that the packaging is non-standard (i.e. un-boxed/crated, not fully enclosed in cardboard). */
      nonStandard?: boolean;
      declaredValue?: {
        /** @description The declared value amount (in US dollars) for the parcel item. */
        amount?: number;
      };
    };
    /**
     * @description Type of location.
     * @default business dock
     * @enum {string}
     */
    LocationType:
      | "business dock"
      | "business no dock"
      | "residential"
      | "limited access"
      | "trade show"
      | "construction"
      | "farm"
      | "military"
      | "airport"
      | "place of worship"
      | "school"
      | "mine"
      | "pier";
    /**
     * @description Packaging types for this item. See [list of LTL packaging types](#section/Packaging-Types)
     * @enum {string}
     */
    LTLPackagingType:
      | "Pallets_48x40"
      | "Pallets_48x48"
      | "Pallets_60x48"
      | "Pallets_other"
      | "Bags"
      | "Bales"
      | "Baskets"
      | "Boxes"
      | "Bundles"
      | "Carpets"
      | "Cases"
      | "Coils"
      | "Crates"
      | "Cylinders"
      | "Drums"
      | "Jerricans"
      | "Pails"
      | "Pieces"
      | "Reels"
      | "Rolls"
      | "Totes"
      | "TubesPipes"
      | "Unit";
    /**
     * @description Packaging type for this item. See [list of parcel packaging types](#section/Packaging-Types)
     *
     * @enum {string}
     */
    ParcelPackagingType:
      | "Custom"
      | "FedEx-envelope"
      | "FedEx-pak"
      | "FedEx-box"
      | "FedEx-small-box"
      | "FedEx-medium-box"
      | "FedEx-large-box"
      | "FedEx-extra-large-box"
      | "FedEx-tube"
      | "FedEx-10kg-box"
      | "FedEx-25kg-box"
      | "UPS-letter"
      | "UPS-tube"
      | "UPS-pak"
      | "UPS-express-box-small"
      | "UPS-express-box-medium"
      | "UPS-express-box-large"
      | "UPS-10kg-box"
      | "UPS-25kg-box";
    /**
     * @description Freight class of the handling unit. See [list of valid freight classes.](#section/Freight-Class)
     * @enum {number}
     */
    FreightClass:
      | 50
      | 55
      | 60
      | 65
      | 70
      | 77.5
      | 85
      | 92.5
      | 100
      | 110
      | 125
      | 150
      | 175
      | 200
      | 250
      | 300
      | 400
      | 500;
    /** @description Details of the hazardous material. */
    HazardousMaterial: {
      /**
       * @description The UN/NA hazardous material identification number for the item
       * @example UN1170
       */
      hazmatId?: string;
      /**
       * @description The hazard classification of the hazardous material.
       * @enum {string}
       */
      hazardClass?:
        | "1.1A"
        | "1.1B"
        | "1.1C"
        | "1.1D"
        | "1.1E"
        | "1.1F"
        | "1.1G"
        | "1.1J"
        | "1.1L"
        | "1.2B"
        | "1.2C"
        | "1.2D"
        | "1.2E"
        | "1.2F"
        | "1.2G"
        | "1.2H"
        | "1.2J"
        | "1.2K"
        | "1.2L"
        | "1.3C"
        | "1.3F"
        | "1.3G"
        | "1.3H"
        | "1.3J"
        | "1.3K"
        | "1.3L"
        | "1.4B"
        | "1.4C"
        | "1.4D"
        | "1.4E"
        | "1.4F"
        | "1.4G"
        | "1.4S"
        | "1.5D"
        | "2.1"
        | "2.2"
        | "2.3"
        | "3"
        | "4.1"
        | "4.2"
        | "4.3"
        | "5.1"
        | "5.2"
        | "6.1"
        | "6.2"
        | "7"
        | "8"
        | "9";
      /** @description The sub-risk hazard classification of the hazardous material. (Also known as secondary hazard class). */
      hazardSubClass1?: string;
      /** @description The sub-risk hazard classification of the hazardous material. (Also known as tertiary hazard class). */
      hazardSubClass2?: string;
      /**
       * @description The packing group that accords with the degree of danger of the hazardous material.
       * @enum {string}
       */
      packingGroup?: "I-Great Danger" | "II-Medium Danger" | "III-Minor Danger";
      /** @description US DOT special permit number. */
      specialPermit?: string;
    };
    /**
     * @description The package type for "said to contain".
     * @enum {string}
     */
    SaidToContainOptions:
      | "Bags"
      | "Bales"
      | "Baskets"
      | "Boxes"
      | "Bundles"
      | "Carpets"
      | "Cases"
      | "Coils"
      | "Crates"
      | "Cylinders"
      | "Drums"
      | "Jerricans"
      | "Kegs"
      | "Pails"
      | "Pieces"
      | "Reels"
      | "Rolls"
      | "Totes"
      | "Tubes/Pipes";
    /**
     * @description The package type for "said to contain", when it contains fluid.
     * @enum {string}
     */
    FluidSaidToContainOptions:
      | "Bags"
      | "Bales"
      | "Baskets"
      | "Boxes"
      | "Bundles"
      | "Carpets"
      | "Cases"
      | "Coils"
      | "Crates"
      | "Cylinders"
      | "Drums"
      | "gallons"
      | "Jerricans"
      | "Kegs"
      | "liters"
      | "ounces"
      | "Pails"
      | "Pieces"
      | "Reels"
      | "Rolls"
      | "Totes"
      | "Tubes/Pipes";
    /** @description The Bill of Lading number for this shipment. Auto-generated by Freightview upon booking unless value provided by shipper. */
    BOLNumber: string;
  };
  responses: {
    /** @description The request is mis-formed. */
    BadRequest: {
      headers: {
        [name: string]: unknown;
      };
      content: {
        "application/json": {
          /** @description Error message. */
          error: string;
          /** @description A human-readable explanation of the error. */
          message?: string;
        };
      };
    };
    /** @description Authentication failed on the request. */
    Unauthorized: {
      headers: {
        [name: string]: unknown;
      };
      content?: never;
    };
    /** @description No active subscription with Freightview. */
    PaymentRequired: {
      headers: {
        [name: string]: unknown;
      };
      content?: never;
    };
    /** @description The requested resource does not exist. */
    NotFound: {
      headers: {
        [name: string]: unknown;
      };
      content?: never;
    };
    /** @description Too many requests have been made to this endpoint. 90 rating requests across LTL and parcel are allowed per minute. */
    TooManyRatingRequests: {
      headers: {
        [name: string]: unknown;
      };
      content?: never;
    };
    /** @description Too many requests have been made to this endpoint. 20 booking requests across LTL and parcel are allowed per minute. */
    TooManyBookingRequests: {
      headers: {
        [name: string]: unknown;
      };
      content?: never;
    };
    /** @description Too many requests have been made to this endpoint. 120 search requests are allowed per minute. */
    TooManySearchRequests: {
      headers: {
        [name: string]: unknown;
      };
      content?: never;
    };
    /** @description The server encountered an error. */
    ServerError: {
      headers: {
        [name: string]: unknown;
      };
      content?: never;
    };
  };
  parameters: never;
  requestBodies: {
    "Shared.Book.Request": {
      content: {
        "application/json": {
          /** @description The shipment `id` to book. */
          id: string;
          /** @description The specific rate `id` to use when booking the shipment. */
          rateId: string;
          /** @description A flag that determines whether a pickup request is sent to the carrier. i.e. if you would like to just print a Bill of Lading/labels set to `false`.
           *     * For booking parcel shipments, if a pickup is needed, use `schedulePickup: true` in the rate request to ensure that the rate includes the cost of the pickup, and then don't include `schedulePickup` in the book request.
           *      */
          schedulePickup?: boolean;
          /** @description An array of email addresses with which to share the shipment. This will allow the email recipient to view the shipment bill of lading, and tracking status. */
          shareShipmentEmails?: string[];
          bolNum?: components["schemas"]["BOLNumber"];
          /** @description Company name for the pickup location. */
          originCompany?: string;
          /** @description Address for the pickup location. */
          originAddress?: string;
          /** @description Address line 2 for the pickup location. */
          originAddress2?: string;
          /** @description Name of a contact person at the pickup location. */
          originContactName?: string;
          /**
           * @description Phone number for the contact at the pickup location.
           * @example (555) 555-5555
           */
          originContactPhone?: string;
          /**
           * Format: email
           * @description Email for the contact at the pickup location. _(Required by some carriers for booking)_
           */
          originContactEmail?: string;
          /** @description Reference numbers for the origin. (e.g. Order number) */
          originReferenceNumber?: string;
          /** @description Special instructions at the pickup location. */
          originInstructions?: string;
          /**
           * @description The time the origin location will be open for pickups in 12-hour format. Format **(9:00 AM)**
           * @example 9:00 AM
           */
          originDockHoursOpen?: string;
          /**
           * @description The time the origin location will close for pickups in 12-hour format. Format **(5:00 PM)**
           * @example 5:00 PM
           */
          originDockHoursClose?: string;
          /** @description Company name for the delivery location. */
          destCompany?: string;
          /** @description Address for the delivery location. */
          destAddress?: string;
          /** @description Address line 2 for the delivery location. */
          destAddress2?: string;
          /** @description Name of a contact person at the delivery location. */
          destContactName?: string;
          /**
           * @description Phone number for the contact at the delivery location.
           * @example (555) 555-5555
           */
          destContactPhone?: string;
          /**
           * Format: email
           * @description Email for the contact at the delivery location.
           */
          destContactEmail?: string;
          /** @description Reference numbers for the delivery location. (e.g. PO number) */
          destReferenceNumber?: string;
          /** @description Special instructions for delivery. */
          destInstructions?: string;
          /**
           * @description The time the destination location will be open for deliveries in 12-hour format. Format **(9:00 AM)**
           * @example 9:00 AM
           */
          destDockHoursOpen?: string;
          /**
           * @description The time the destination location will stop accepting deliveries in 12-hour format. Format **(5:00 PM)**
           * @example 5:00 PM
           */
          destDockHoursClose?: string;
          /** @description Emergency contact name. _Required if any items on the shipment are hazardous._ */
          emergencyName?: string;
          /**
           * @description Emergency contact phone number. _Required if any items on the shipment are hazardous._
           * @example (555) 555-5555
           */
          emergencyPhone?: string;
        };
      };
    };
  };
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
type WithRequired<T, K extends keyof T> = T & {
  [P in K]-?: T[P];
};
export type operations = Record<string, never>;
