{
  "openapi": "3.0.1",
  "info": {
    "title": "OrderProcessing.ERP.Api",
    "version": "v1",
    "x-logo": {
      "url": "https://apporderprocessprodsa.blob.core.windows.net/$web/images/tms-logo.svg",
      "altText": "MyCarrier TMS logo"
    }
  },
  "servers": [
    {
      "url": "https://app-orderprocessing-preprod-erpapi.azurewebsites.net"
    }
  ],
  "paths": {
    "/api/Health": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Health Check",
        "description": "Monitor App Service instance",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Health"
        ],
        "summary": "Health Check",
        "description": "Monitor App Service instance",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Orders": {
      "post": {
        "tags": [
          "Order"
        ],
        "summary": "Create or Modify Orders",
        "description": "Create a new order or update existing by Reference ID",
        "operationId": "UploadOrder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ITM.Shared.Functions.OrderProcessing.Common.Models.UploadOrder.DataModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request was successfully added to the processing queue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ITM.Shared.Functions.OrderProcessing.Common.Models.Results.Result"
                },
                "example": {"isSuccess":true,"errorMessages":[]}
              }
            }
          },
          "400": {
            "description": "Request has missing/invalid values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ITM.Shared.Functions.OrderProcessing.Common.Models.Results.Result"
                },
                "example": {"isSuccess":false,"errorMessages":["'Quote Reference ID' must not be empty."]}
              }
            }
          },
          "401": {
            "description": "Unauthorized. The username or password provided is incorrect"
          }
        },
        "x-code-samples": [
          {
            "lang": "C#",
            "source": "Order payload = new Order()\r\n{\r\n    QuoteReferenceID = \"Jun-25-2023 432 Rr\",\r\n    ServiceType = \"LTL\",\r\n    PickupDate = \"06/25/2023\",\r\n    TimeCreated = \"06/25/2023 9:00 AM\",\r\n    OriginStop = new OriginStop() \r\n    {\r\n        LocationID = \"My origin locationId\" \r\n    },\r\n    DestinationStop = new DestinationStop() \r\n    { \r\n        LocationID = \"My destination locationId\" \r\n    },\r\n    QuoteUnits = new List<Unit>()\r\n    {\r\n        new Unit()\r\n        {\r\n             ShippingUnitType = \"Bag\",\r\n             UnitLength = \"50\",\r\n             UnitWidth = \"50\",\r\n             UnitHeight = \"50\",\r\n             QuoteCommodities = new List<Commodity>()\r\n             {\r\n                 new Commodity()\r\n                 {\r\n                     ProductID = \"My Product ID\"\r\n                 }\r\n             }\r\n        }\r\n    }\r\n\r\n};\r\nstring username = \"email\";\r\nstring password = \"api-key\";\r\nstring authString = Convert.ToBase64String(Encoding.UTF8.GetBytes($\"{username}:{password}\"));\r\n\r\nHttpContent content = new StringContent(JsonConvert.SerializeObject(payload), Encoding.UTF8);\r\nhttpClient.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue(\"Basic\", authString);\r\n\r\nHttpResponseMessage response = await httpClient.PostAsync(\"https://localhost:7520/api/orders\", content);\r\nString result = await response.Content.ReadAsStringAsync();\r\nConsole.WriteLine(result);"
          },
          {
            "lang": "CURL",
            "source": "curl -X 'POST' \\\r\n  'https://localhost:7520/api/orders' \\\r\n  -H 'accept: application/json' \\\r\n  -H 'Authorization: Basic ZW1haWw6YXBpLWtleQ==' \\\r\n  -H 'Content-Type: application/json' \\\r\n  -d '{\r\n  \"orders\": [\r\n    {\r\n      \"quoteReferenceID\": \"Jun-25-2023 432 Rr\",\r\n      \"serviceType\": \"LTL\",\r\n      \"pickupDate\": \"06/25/2023\",      \r\n      \"timeCreated\": \"06/25/2023 9:00 AM\",      \r\n      \"originStop\": {     \r\n        \"locationID\": \"My origin locationId\"\r\n      },\r\n      \"destinationStop\": {\r\n        \"locationID\": \"My destination locationId\"\r\n      },\r\n      \"quoteUnits\": [\r\n        {\r\n          \"shippingUnitType\": \"Bag\",\r\n          \"unitLength\": \"50\",\r\n          \"unitWidth\": \"50\",\r\n          \"unitHeight\": \"50\",\r\n          \"quoteCommodities\": [\r\n            {\r\n              \"productID\": \"My Product ID\"              \r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}'"
          },
          {
            "lang": "JavaScript",
            "source": "const options = {\r\n  method: 'POST',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'Authorization': 'Basic '+btoa('username:password') },\r\n  body: JSON.stringify({\r\n    orders: [{\r\n       quoteReferenceID: 'Jun-25-2023 432 Rr',\r\n       serviceType: 'LTL',\r\n       pickupDate: '06/25/2023',      \r\n       timeCreated: '06/25/2023 9:00 AM',     \r\n       originStop: {       \r\n          locationID: 'My origin locationId'\r\n       },\r\n       destinationStop: {      \r\n          locationID: 'My destination locationId'\r\n       },\r\n       quoteUnits: [{\r\n          shippingUnitType: 'Bag',\r\n          unitLength: '50',\r\n          unitWidth: '50',\r\n          unitHeight: '50',\r\n          quoteCommodities: [{\r\n             productID: 'My productId'             \r\n          }]\r\n       }]\r\n    }]\r\n  })\r\n};\r\n\r\nfetch('https://localhost:7520/api/orders', options)\r\n  .then(response => response.json())\r\n  .then(response => console.log(response))\r\n  .catch(err => console.error(err));"
          }
        ]
      }
    },
    "/api/Orders/{referenceId}": {
      "delete": {
        "tags": [
          "Order"
        ],
        "summary": "Delete Order",
        "description": "Delete an order by Reference ID",
        "operationId": "DeleteOrder",
        "parameters": [
          {
            "name": "referenceId",
            "in": "path",
            "description": "Reference ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request was successfully added to the processing queue",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ITM.Shared.Functions.OrderProcessing.Common.Models.Results.Result"
                },
                "example": {"isSuccess":true,"errorMessages":[]}
              }
            }
          },
          "400": {
            "description": "Request has missing/invalid values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ITM.Shared.Functions.OrderProcessing.Common.Models.Results.Result"
                },
                "example": {"isSuccess":false,"errorMessages":["The length of 'Quote Reference ID' must be 32 characters or fewer. You entered 36 characters."]}
              }
            }
          },
          "401": {
            "description": "Unauthorized. The username or password provided is incorrect"
          }
        },
        "x-code-samples": [
          {
            "lang": "C#",
            "source": "string username = \"email\";\r\nstring password = \"api-key\";\r\nstring authString = Convert.ToBase64String(Encoding.UTF8.GetBytes($\"{username}:{password}\"));\r\nhttpClient.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue(\"Basic\", authString);\r\n\r\nHttpResponseMessage response = await httpClient.DeleteAsync(\"https://localhost:7520/api/Orders/Jun-25-2023%20432%20Rr\");\r\nString result = await response.Content.ReadAsStringAsync();\r\nConsole.WriteLine(result);"
          },
          {
            "lang": "CURL",
            "source": "curl -X 'DELETE' \\\r\n  'https://localhost:7520/api/Orders/Jun-25-2023%20432%20Rr' \\\r\n  -H 'accept: application/json' \\\r\n  -H 'Authorization: Basic ZW1haWw6YXBpLWtleQ=='"
          },
          {
            "lang": "JavaScript",
            "source": "\r\nconst options = {\r\n  method: 'DELETE',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'Authorization': 'Basic '+btoa('username:password') }\r\n};\r\n\r\nfetch('https://localhost:7520/api/Orders/Jun-25-2023%20432%20Rr', options)\r\n  .then(response => response.json())\r\n  .then(response => console.log(response))\r\n  .catch(err => console.error(err));"
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ITM.Shared.Functions.OrderProcessing.Common.Models.Results.Result": {
        "type": "object",
        "properties": {
          "isSuccess": {
            "type": "boolean",
            "description": "Determines if the operation was successful"
          },
          "errorMessages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of error messages"
          }
        },
        "additionalProperties": false
      },
      "ITM.Shared.Functions.OrderProcessing.Common.Models.UploadOrder.Commodity": {
        "type": "object",
        "properties": {
          "productID": {
            "maxLength": 128,
            "type": "string",
            "description": "An optional unique string identifier that can be used to specify a commodity that is already saved in the MyCarrier platform",
            "example": "My Product ID"
          },
          "commodityDescription": {
            "maxLength": 499,
            "type": "string",
            "description": "An optional string to be used in the absence of a productid that specifies the commodity description for a specific commodity in a specific handling unit",
            "example": "Some text"
          },
          "commodityNMFC": {
            "maxLength": 6,
            "minLength": 4,
            "type": "string",
            "description": "An optional non-decimal numeric string to be used in the absence of a productid that specifies the commodity NMFC code for a specific commodity in a specific handling unit",
            "example": "32100"
          },
          "commoditySub": {
            "maxLength": 2,
            "type": "string",
            "description": "An optional non-decimal numeric string to be used in the absence of a productid that specifies the commodity NMFC item sub code for a specific commodity in a specific handling unit",
            "example": "2"
          },
          "commodityClass": {
            "enum": [
              "50",
              "55",
              "60",
              "65",
              "70",
              "77.5",
              "85",
              "92.5",
              "100",
              "110",
              "125",
              "150",
              "175",
              "200",
              "250",
              "300",
              "400",
              "500"
            ],
            "type": "string",
            "description": "A non-optional non-decimal numeric string to be used in the absence of a productid that specifies the commodity class for a specific commodity in a specific handling unit"
          },
          "commodityPieces": {
            "maxLength": 5,
            "type": "string",
            "description": "A non-optional non-decimal numeric string that specifies the number of pieces for a specific commodity in a specific handling unit",
            "default": "1",
            "example": "1"
          },
          "commodityWeight": {
            "maxLength": 5,
            "type": "string",
            "description": "A non-optional non-decimal numeric string to be used in the absence of a productid that specifies the weight for a specific commodity in a specific handling unit using the units of measurement specified in the customer’s default settings",
            "example": "100"
          },
          "commodityPackingType": {
            "enum": [
              "Bag",
              "Bale",
              "Box",
              "Bucket",
              "Bundle",
              "Carton",
              "Case",
              "Crate",
              "Cylinder",
              "Drums",
              "Pail",
              "Reel",
              "Roll",
              "Tote",
              "Tube"
            ],
            "type": "string",
            "description": "A non-optional string enumeration that specifies the type of packaging used for a specific commodity in a specific handling unit"
          },
          "commodityHazMat": {
            "enum": [
              "YES",
              "NO",
              "TRUE",
              "FALSE",
              "Y",
              "N",
              "T",
              "F",
              "1",
              "0"
            ],
            "type": "string",
            "description": "An optional string enumeration that specifies that the specific commodity in a specific handling unit is classified as hazardous material",
            "default": "NO",
            "example": "Yes"
          },
          "hazmatIDNumber": {
            "maxLength": 6,
            "type": "string",
            "description": "An optional string to be used in conjunction with the commodityHazMat property using the United Nations (UN) or North American (NA) format that specifies the hazardous material identifier for the specific commodity in the specific handling unit",
            "example": "UN2333"
          },
          "hazmatProperShippingName": {
            "maxLength": 499,
            "type": "string",
            "description": "An optional string to be used in conjunction with the commodityHazMat property that specifies the full proper shipping name for the specific commodity in the specific handling unit",
            "example": "1, 3-Dimethylbutylamine"
          },
          "hazmatHazardClass": {
            "maxLength": 12,
            "type": "string",
            "description": "An optional string to be used in conjunction with the commodityHazMat property that specifies the Federal Motor Carrier Safety Administration (FMCSA) hazard class for the specific commodity in the specific handling unit",
            "example": "3"
          },
          "hazmatPackingGroup": {
            "enum": [
              "I",
              "II",
              "III",
              "NONE"
            ],
            "type": "string",
            "description": "An optional string enumeration to be used in conjunction with the commodityHazMat property that specifies the hazardous material packing group type indicating the degree of danger for a hazardous material in the specific commodity in the specific handling unit"
          },
          "customerOrderNumber": {
            "maxLength": 20,
            "type": "string",
            "description": "An semi-optional string to be used in conjunction with the isVicsBol property that specifies the Sales Order number of the which the commodity is a line item of to be displayed on the VICs Bill of Lading",
            "example": "123456"
          }
        },
        "additionalProperties": false
      },
      "ITM.Shared.Functions.OrderProcessing.Common.Models.UploadOrder.DataModel": {
        "type": "object",
        "properties": {
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ITM.Shared.Functions.OrderProcessing.Common.Models.UploadOrder.Order"
            },
            "description": "The order(s) payload"
          }
        },
        "additionalProperties": false
      },
      "ITM.Shared.Functions.OrderProcessing.Common.Models.UploadOrder.DestinationAccessorials": {
        "type": "object",
        "properties": {
          "notifyBeforeDelivery": {
            "enum": [
              "YES",
              "NO",
              "TRUE",
              "FALSE",
              "Y",
              "N",
              "T",
              "F",
              "1",
              "0"
            ],
            "type": "string",
            "description": "An optional string enumeration that specifies whether an order destination stop requires the carrier to notify the destination recipient before a delivery is attempted when an order is quoted or dispatched",
            "default": "NO",
            "example": "Yes"
          },
          "liftgateDelivery": {
            "enum": [
              "YES",
              "NO",
              "TRUE",
              "FALSE",
              "Y",
              "N",
              "T",
              "F",
              "1",
              "0"
            ],
            "type": "string",
            "description": "An optional string enumeration that specifies whether an order destination stop requires the carrier to perform an liftgate delivery when an order is quoted or dispatched",
            "default": "NO",
            "example": "No"
          },
          "sortOrSegregateDelivery": {
            "enum": [
              "YES",
              "NO",
              "TRUE",
              "FALSE",
              "Y",
              "N",
              "T",
              "F",
              "1",
              "0"
            ],
            "type": "string",
            "description": "An optional string enumeration that specifies whether an order destination stop requires the carrier to sort or segregate the shipment from when an order is quoted or dispatched",
            "default": "NO",
            "example": "No"
          },
          "insideDelivery": {
            "enum": [
              "YES",
              "NO",
              "TRUE",
              "FALSE",
              "Y",
              "N",
              "T",
              "F",
              "1",
              "0"
            ],
            "type": "string",
            "description": "An optional string enumeration that specifies whether an order destination stop requires the carrier to perform an inside delivery when an order is quoted or dispatched",
            "default": "NO",
            "example": "No"
          },
          "deliveryAppointment": {
            "enum": [
              "YES",
              "NO",
              "TRUE",
              "FALSE",
              "Y",
              "N",
              "T",
              "F",
              "1",
              "0"
            ],
            "type": "string",
            "description": "An optional string enumeration that specifies whether an order destination stop requires the carrier to schedule an delivery appointment when an order is quoted or dispatched",
            "default": "NO",
            "example": "No"
          }
        },
        "additionalProperties": false
      },
      "ITM.Shared.Functions.OrderProcessing.Common.Models.UploadOrder.DestinationStop": {
        "type": "object",
        "properties": {
          "companyName": {
            "maxLength": 64,
            "type": "string",
            "description": "An optional string to be used in the absence of a locationId value that specifies the name of the company at the destination stop",
            "example": "MyCarrier TMS"
          },
          "streetLine1": {
            "maxLength": 64,
            "type": "string",
            "description": "An optional string to be used in the absence of a locationId value that specifies the primary street address information at the destination stop",
            "example": "598 Virginia Street"
          },
          "streetLine2": {
            "maxLength": 64,
            "type": "string",
            "description": "An optional string to be used in the absence of a locationId value that specifies the secondary street address information at the destination stop",
            "example": "Apartment 123"
          },
          "city": {
            "maxLength": 32,
            "type": "string",
            "description": "An optional string to be used in the absence of a locationId value that specifies the city at the destination stop",
            "example": "River Grove"
          },
          "state": {
            "type": "string",
            "description": "Enum (USA): AL, AK, AZ, AR, CA, CO, CT, DE, FL, GA, HI, ID, IL, IN, IA, KS, KY, LA, ME, MD, MA, MI, MN, MS, MO, MT, NE, NV, NH, NJ, NM, NY, NC, ND, OH, OK, OR, PA, RI, SC, SD, TN, TX, UT, VT, VA, WA, WV, WI, WY.<br />Enum (CAN): AB, BC, MB, NB, NL, NS, NT, NU, ON, PE, QC, SK, YT.<br />An optional string to be used in the absence of a locationId value that specifies a two letter abbreviation of the State or Province at the destination stop",
            "example": "IL"
          },
          "zip": {
            "maxLength": 10,
            "type": "string",
            "description": "An optional string to be used in the absence of a locationId value that specifies the Postal code at the destination stop",
            "example": "60171"
          },
          "country": {
            "enum": [
              "USA",
              "CAN"
            ],
            "type": "string",
            "description": "Abbreviation of country (using ISO 3166 standards)",
            "default": "USA"
          },
          "locationType": {
            "enum": [
              "Business",
              "Residential",
              "Trade Show",
              "Airport",
              "Camp",
              "Church",
              "Construction Site",
              "Country Club",
              "Fair/Amusement/Park",
              "Farm",
              "Government Site",
              "Grocery Warehouse",
              "Hospital",
              "Hotel",
              "Limited Access",
              "Military Installation",
              "Mine Site",
              "Native American Reservation",
              "Nursing Home",
              "Pier",
              "Prison",
              "Resort",
              "School",
              "Self-Storage",
              "Utility Site"
            ],
            "type": "string",
            "description": "An optional string to be used in the absence of a locationId value that specifies the type of location at the destination stop for identification of limited access locations",
            "default": "Business"
          },
          "contactFirstName": {
            "maxLength": 32,
            "type": "string",
            "description": "An optional string to be used in the absence of a locationId value that specifies the first name of the destination stop contact. May be required for some shipments",
            "example": "Jane"
          },
          "contactLastName": {
            "maxLength": 32,
            "type": "string",
            "description": "An optional string to be used in the absence of a locationId value that specifies the last name of the destination stop contact. May be required for some shipments",
            "example": "Wright"
          },
          "contactEmail": {
            "maxLength": 64,
            "type": "string",
            "description": "An optional string to be used in the absence of a locationId value that specifies the email address of the destination stop contact. May be required for some shipments",
            "example": "jane.wright@test.com"
          },
          "contactPhone": {
            "maxLength": 15,
            "type": "string",
            "description": "An optional non-formatted string to be used in the absence of a locationId value that specifies the telephone number of the destination stop contact. May be required for some shipments",
            "example": "(555) 555-1234"
          },
          "ext": {
            "maxLength": 4,
            "type": "string",
            "description": "An optional numeric only string to be used in the absence of a locationId value that specifies the telephone extension of the destination stop contact if applicable",
            "example": "30"
          },
          "readyTime": {
            "type": "string",
            "description": "An optional formatted string to be used in the absence of a locationId value that specifies the time of day local to the destination stop that the destination stop is open to pickups in HH:mm AM or HH:mm PM format",
            "example": "9:00 AM"
          },
          "closeTime": {
            "type": "string",
            "description": "An optional formatted string to be used in the absence of a locationId value that specifies the time of day local to the destination stop that the destination stop is closed to pickups in HH:mm AM or HH:mm PM format",
            "example": "4:00 PM"
          },
          "instructions": {
            "maxLength": 100,
            "type": "string",
            "description": "An optional string to be used in the absence of a locationId value that specifies any additional instructions for pickup at the destination stop",
            "example": "Some instruction notes"
          },
          "locationID": {
            "maxLength": 64,
            "type": "string",
            "description": "An optional unique string identifier that can be used to specify a destination stop location that is already saved in the MyCarrier platform",
            "example": "My destination locationId"
          }
        },
        "additionalProperties": false
      },
      "ITM.Shared.Functions.OrderProcessing.Common.Models.UploadOrder.Order": {
        "required": [
          "quoteReferenceID"
        ],
        "type": "object",
        "properties": {
          "quoteReferenceID": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "A unique identifier that can be used to correlate orders between your source system and the MyCarrier platform",
            "example": "Jun-25-2023 432 Rr"
          },
          "serviceType": {
            "enum": [
              "LTL",
              "TL",
              "GFP"
            ],
            "type": "string",
            "description": "A string enumeration that specifies the mode of freight an order will use to quote and dispatch",
            "default": "LTL"
          },
          "pickupDate": {
            "type": "string",
            "description": "A string representation of the date the order should be picked up using MM/dd/YYYY format",
            "default": "Current Date",
            "example": "06/25/2023"
          },
          "paymentDirection": {
            "enum": [
              "Prepaid",
              "Inbound Collect",
              "Third Party",
              "Outbound Collect"
            ],
            "type": "string",
            "description": "A string enumeration that specifies the type of payment this order will use to quote and dispatch",
            "default": "Prepaid"
          },
          "carrier": {
            "enum": [
              "AACT",
              "ABFS",
              "AGCE",
              "AVRT",
              "BRTC",
              "BTVP",
              "BTYT",
              "CCYQ",
              "CLNI",
              "CMFC",
              "CRVG",
              "CTBV",
              "CTII",
              "CTIIP",
              "CXIT",
              "DAFG",
              "DAYR",
              "DBDE",
              "DHRN",
              "DLDS",
              "DPHE",
              "DTST",
              "DUBL",
              "DYLT",
              "EDXI",
              "EFWW",
              "EMRG",
              "EXLA",
              "FCSY",
              "FFRT",
              "FLOK",
              "FTSC",
              "FWDN",
              "FXFE",
              "HLNF",
              "HMES",
              "HRCF",
              "HWEP",
              "JPXS",
              "KUTZ",
              "LAXV",
              "LOADS",
              "MANI",
              "MGUL",
              "MIDW",
              "MIHD",
              "MOLO",
              "MONC",
              "MTJG",
              "MTVL",
              "NEMF",
              "NMTF",
              "NPME",
              "OAKH",
              "ODFL",
              "OVLD",
              "PAAF",
              "PENS",
              "PFEG",
              "PITD",
              "POGL",
              "POLT",
              "PYLE",
              "RDFS",
              "RDWY",
              "RETL",
              "RISG",
              "RIST",
              "RLCA",
              "RXIC",
              "RXO",
              "SAIA",
              "SEFL",
              "SMTL",
              "STDF",
              "SUON",
              "TAXA",
              "TDTW",
              "TOTL",
              "TTFY",
              "UGFP",
              "UPGF",
              "UPPD",
              "USRD",
              "UTPA",
              "VSXP",
              "WARD",
              "WAYD",
              "WAYF",
              "XGSI",
              "XPOL"
            ],
            "type": "string",
            "description": "An optional string enumeration that specifies the carrier this order will use to quote and dispatch",
            "example": "ABFS"
          },
          "carrierService": {
            "enum": [
              "Standard",
              "Morning Guaranteed",
              "Afternoon Guaranteed"
            ],
            "type": "string",
            "description": "An optional string enumeration that specifies the level of service that this order will use to quote and dispatch",
            "default": "Standard"
          },
          "specialInstructions": {
            "maxLength": 300,
            "type": "string",
            "description": "Default: Will use the customer settings default special instructions property if set in the customer settings and not specified in the order request object otherwise will be an empty string <br />An optional string message to include in the order that will be sent to the carrier(s) when quoting and dispatching",
            "example": "Further Inspection Required"
          },
          "emergencyContactPersonName": {
            "maxLength": 70,
            "type": "string",
            "description": "An optional string that specified the full name of the emergency contact if the order contains hazardous materials",
            "example": "James Doe"
          },
          "emergencyContactPhone": {
            "maxLength": 15,
            "type": "string",
            "description": "An optional string that specifies the phone number of the emergency contact if the order contains hazardous materials",
            "example": "(555) 555-5555"
          },
          "readyToDispatch": {
            "enum": [
              "YES",
              "NO",
              "TRUE",
              "FALSE",
              "Y",
              "N",
              "T",
              "F",
              "1",
              "0"
            ],
            "type": "string",
            "description": "An optional string to be used to proceed with automatic dispatch",
            "default": "NO",
            "example": "Yes"
          },
          "timeCreated": {
            "type": "string",
            "description": "An optional string that specifies the date and time an order was created in the source system",
            "example": "06/25/2023 9:00 AM"
          },
          "isVicsBol": {
            "enum": [
              "YES",
              "NO",
              "TRUE",
              "FALSE",
              "Y",
              "N",
              "T",
              "F",
              "1",
              "0"
            ],
            "type": "string",
            "description": "An optional string enumeration that specifies if the order should create a standard Bill of Lading or a VICs Bill of Lading when the order is dispatched",
            "default": "NO",
            "example": "Yes"
          },
          "vicsBolPrefix": {
            "maxLength": 11,
            "type": "string",
            "description": "An optional string to be used in conjunction with isVicsBol that specifies the prefix to include when generating a VICs Bill of Lading number when an order is dispatched",
            "example": "058645621"
          },
          "proNumber": {
            "type": "string",
            "description": "An optional string to be used when not utilizing auto-pro/pre-pro functionality to specify the Pro number when an order is dispatched",
            "example": "5968175596"
          },
          "references": {
            "$ref": "#/components/schemas/ITM.Shared.Functions.OrderProcessing.Common.Models.UploadOrder.References"
          },
          "originAccessorials": {
            "$ref": "#/components/schemas/ITM.Shared.Functions.OrderProcessing.Common.Models.UploadOrder.OriginAccessorials"
          },
          "destinationAccessorials": {
            "$ref": "#/components/schemas/ITM.Shared.Functions.OrderProcessing.Common.Models.UploadOrder.DestinationAccessorials"
          },
          "originStop": {
            "$ref": "#/components/schemas/ITM.Shared.Functions.OrderProcessing.Common.Models.UploadOrder.OriginStop"
          },
          "destinationStop": {
            "$ref": "#/components/schemas/ITM.Shared.Functions.OrderProcessing.Common.Models.UploadOrder.DestinationStop"
          },
          "quoteUnits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ITM.Shared.Functions.OrderProcessing.Common.Models.UploadOrder.Unit"
            },
            "description": "A non-optional array of objects that specifies the one or more handling units of different types with different commodities a order contains when an order is quoted or dispatched"
          }
        },
        "additionalProperties": false
      },
      "ITM.Shared.Functions.OrderProcessing.Common.Models.UploadOrder.OriginAccessorials": {
        "type": "object",
        "properties": {
          "insidePickup": {
            "enum": [
              "YES",
              "NO",
              "TRUE",
              "FALSE",
              "Y",
              "N",
              "T",
              "F",
              "1",
              "0"
            ],
            "type": "string",
            "description": "An optional string enumeration that specifies whether an order origin stop requires the carrier to perform an inside pickup when an order is quoted or dispatched",
            "default": "NO",
            "example": "No"
          },
          "liftgatePickup": {
            "enum": [
              "YES",
              "NO",
              "TRUE",
              "FALSE",
              "Y",
              "N",
              "T",
              "F",
              "1",
              "0"
            ],
            "type": "string",
            "description": "An optional string enumeration that specifies whether an order origin stop requires the carrier to perform an liftgate pickup when an order is quoted or dispatched",
            "default": "NO",
            "example": "No"
          },
          "protectFromFreeze": {
            "enum": [
              "YES",
              "NO",
              "TRUE",
              "FALSE",
              "Y",
              "N",
              "T",
              "F",
              "1",
              "0"
            ],
            "type": "string",
            "description": "An optional string enumeration that specifies whether an order origin stop requires the carrier to protect the shipment from freezing when an order is quoted or dispatched",
            "default": "NO",
            "example": "Yes"
          },
          "singleShipment": {
            "enum": [
              "YES",
              "NO",
              "TRUE",
              "FALSE",
              "Y",
              "N",
              "T",
              "F",
              "1",
              "0"
            ],
            "type": "string",
            "description": "An optional string enumeration that specifies whether an order origin stop requires the carrier to support a single shipment pickup when an order is quoted or dispatched",
            "default": "NO",
            "example": "No"
          },
          "inBondFreight": {
            "enum": [
              "YES",
              "NO",
              "TRUE",
              "FALSE",
              "Y",
              "N",
              "T",
              "F",
              "1",
              "0"
            ],
            "type": "string",
            "description": "An optional string enumeration that specifies whether an order origin stop requires the carrier to support an in bond freight pickup when an order is quoted or dispatched",
            "default": "NO",
            "example": "No"
          }
        },
        "additionalProperties": false
      },
      "ITM.Shared.Functions.OrderProcessing.Common.Models.UploadOrder.OriginStop": {
        "type": "object",
        "properties": {
          "companyName": {
            "maxLength": 64,
            "type": "string",
            "description": "An optional string to be used in the absence of a locationId value that specifies the name of the company at the origin stop",
            "example": "MyCarrier TMS"
          },
          "streetLine1": {
            "maxLength": 64,
            "type": "string",
            "description": "An optional string to be used in the absence of a locationId value that specifies the primary street address information at the origin stop",
            "example": "598 Virginia Street"
          },
          "streetLine2": {
            "maxLength": 64,
            "type": "string",
            "description": "An optional string to be used in the absence of a locationId value that specifies the secondary street address information at the origin stop",
            "example": "Apartment 123"
          },
          "city": {
            "maxLength": 32,
            "type": "string",
            "description": "An optional string to be used in the absence of a locationId value that specifies the city at the origin stop",
            "example": "River Grove"
          },
          "state": {
            "type": "string",
            "description": "Enum (USA): AL, AK, AZ, AR, CA, CO, CT, DE, FL, GA, HI, ID, IL, IN, IA, KS, KY, LA, ME, MD, MA, MI, MN, MS, MO, MT, NE, NV, NH, NJ, NM, NY, NC, ND, OH, OK, OR, PA, RI, SC, SD, TN, TX, UT, VT, VA, WA, WV, WI, WY.<br />Enum (CAN): AB, BC, MB, NB, NL, NS, NT, NU, ON, PE, QC, SK, YT.<br />An optional string to be used in the absence of a locationId value that specifies a two letter abbreviation of the State or Province at the origin stop",
            "example": "IL"
          },
          "zip": {
            "maxLength": 10,
            "type": "string",
            "description": "An optional string to be used in the absence of a locationId value that specifies the Postal code at the origin stop",
            "example": "60171"
          },
          "country": {
            "enum": [
              "USA",
              "CAN"
            ],
            "type": "string",
            "description": "Abbreviation of country (using ISO 3166 standards)",
            "default": "USA"
          },
          "locationType": {
            "enum": [
              "Business",
              "Residential",
              "Trade Show",
              "Airport",
              "Camp",
              "Church",
              "Construction Site",
              "Country Club",
              "Fair/Amusement/Park",
              "Farm",
              "Government Site",
              "Grocery Warehouse",
              "Hospital",
              "Hotel",
              "Limited Access",
              "Military Installation",
              "Mine Site",
              "Native American Reservation",
              "Nursing Home",
              "Pier",
              "Prison",
              "Resort",
              "School",
              "Self-Storage",
              "Utility Site"
            ],
            "type": "string",
            "description": "An optional string to be used in the absence of a locationId value that specifies the type of location at the origin stop for identification of limited access locations",
            "default": "Business"
          },
          "contactFirstName": {
            "maxLength": 32,
            "type": "string",
            "description": "An optional string to be used in the absence of a locationId value that specifies the first name of the origin stop contact. May be required for some shipments",
            "example": "Jane"
          },
          "contactLastName": {
            "maxLength": 32,
            "type": "string",
            "description": "An optional string to be used in the absence of a locationId value that specifies the last name of the origin stop contact. May be required for some shipments",
            "example": "Wright"
          },
          "contactEmail": {
            "maxLength": 64,
            "type": "string",
            "description": "An optional string to be used in the absence of a locationId value that specifies the email address of the origin stop contact. May be required for some shipments",
            "example": "jane.wright@test.com"
          },
          "contactPhone": {
            "maxLength": 15,
            "type": "string",
            "description": "An optional non-formatted string to be used in the absence of a locationId value that specifies the telephone number of the origin stop contact. May be required for some shipments",
            "example": "(555) 555-1234"
          },
          "ext": {
            "maxLength": 5,
            "type": "string",
            "description": "An optional numeric only string to be used in the absence of a locationId value that specifies the telephone extension of the origin stop contact if applicable",
            "example": "30"
          },
          "readyTime": {
            "type": "string",
            "description": "An optional formatted string to be used in the absence of a locationId value that specifies the time of day local to the origin stop that the origin stop is open to pickups in HH:mm AM or HH:mm PM format",
            "example": "9:00 AM"
          },
          "closeTime": {
            "type": "string",
            "description": "An optional formatted string to be used in the absence of a locationId value that specifies the time of day local to the origin stop that the origin stop is closed to pickups in HH:mm AM or HH:mm PM format",
            "example": "4:00 PM"
          },
          "instructions": {
            "maxLength": 100,
            "type": "string",
            "description": "An optional string to be used in the absence of a locationId value that specifies any additional instructions for pickup at the origin stop",
            "example": "Some instruction notes"
          },
          "locationID": {
            "maxLength": 64,
            "type": "string",
            "description": "An optional unique string identifier that can be used to specify a origin stop location that is already saved in the MyCarrier platform",
            "example": "My origin locationId"
          }
        },
        "additionalProperties": false
      },
      "ITM.Shared.Functions.OrderProcessing.Common.Models.UploadOrder.References": {
        "type": "object",
        "properties": {
          "customerBOLNumber": {
            "maxLength": 20,
            "type": "string",
            "description": "An optional string to specify a unique Bill of Lading number for an order when an order is dispatched",
            "example": "456856"
          },
          "poNumber": {
            "maxLength": 128,
            "type": "string",
            "description": "An optional string to specify a unique PO number for an order when an order is dispatched",
            "example": "145255"
          },
          "referenceNumber": {
            "maxLength": 20,
            "type": "string",
            "description": "An optional string to specify a unique reference number for an order when an order is dispatched",
            "example": "75441454"
          }
        },
        "additionalProperties": false
      },
      "ITM.Shared.Functions.OrderProcessing.Common.Models.UploadOrder.Unit": {
        "type": "object",
        "properties": {
          "shippingUnitType": {
            "enum": [
              "Bag",
              "Bale",
              "Box",
              "Bucket",
              "Bundle",
              "Carton",
              "Case",
              "Crate",
              "Cylinder",
              "Drums",
              "Pail",
              "Pallet",
              "Pieces",
              "Reel",
              "Roll",
              "Skid",
              "Tote",
              "Tube"
            ],
            "type": "string",
            "description": "A non-optional string enumeration that specifies the type of handling unit the order will used when an order is quoted or dispatched",
            "default": "Pallet"
          },
          "shippingUnitCount": {
            "maxLength": 3,
            "type": "string",
            "description": "A non-optional numeric string that specifies the number of handling units of the type, dimensions, and commodity(ies) specified in the shippingUnitType that will be used when an order is quoted or dispatched",
            "default": "1",
            "example": "2"
          },
          "unitLength": {
            "maxLength": 4,
            "type": "string",
            "description": "An optional non-decimal numeric string that specifies the length of the handling unit using the units of measurement specified in the customer’s default settings",
            "example": "50"
          },
          "unitWidth": {
            "maxLength": 4,
            "type": "string",
            "description": "An optional non-decimal numeric string that specifies the width of the handling unit using the units of measurement specified in the customer’s default settings",
            "example": "50"
          },
          "unitHeight": {
            "maxLength": 4,
            "type": "string",
            "description": "An optional non-decimal numeric string that specifies the height of the handling unit using the units of measurement specified in the customer’s default settings",
            "example": "50"
          },
          "unitStackable": {
            "enum": [
              "YES",
              "NO",
              "TRUE",
              "FALSE",
              "Y",
              "N",
              "T",
              "F",
              "1",
              "0"
            ],
            "type": "string",
            "description": "An optional string that specifies if the handling units of the type, dimensions, and commodity(ies) specified in the shippingUnitType are stackable when an order is quoted or dispatched",
            "default": "NO",
            "example": "No"
          },
          "quoteCommodities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ITM.Shared.Functions.OrderProcessing.Common.Models.UploadOrder.Commodity"
            },
            "description": "A non-optional array of objects that specifies the one or more commodities contained in a specific handling unit object"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "basic": {
        "type": "http",
        "description": "Basic Authorization: Use `email` / `api-key` for login",
        "scheme": "basic"
      }
    }
  },
  "security": [
    {
      "basic": [ ]
    }
  ]
}